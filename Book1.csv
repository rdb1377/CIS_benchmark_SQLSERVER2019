no.,index,Dsc,Query,AuditType,RetNumbers,val1,val2,val3,RemType,numberOfTransitions,replacename,recom,,,title,,,,,,,,
1,1.1,Ensure Latest SQL Server Cumulative and Security Updates are installed,0,0,0,0,0,,0,0,,0,,,Ensure Latest SQL Server Cumulative and Security Updates are Installed,,,,,,,,
2,1.2,Ensure Single-Function Member Servers are Used,0,0,0,0,0,,0,0,,0,,,Ensure Single-Function Member Servers are Used,,,,,,,,
3,2.1,"<p style =""font-family : Times New Roman ,font-size: 8px"" ><h3>2.1 Ensure 'Ad Hoc Distributed Queries' Server Configuration Option is set to '0' (Automated) </h3> <br> <b>Profile Applicability:</b> <br> &bull; Level 1 - Database Engine <br>&bull; Level 1 - AWS RDS <br><br> <b>Description:</b> <br>Enabling Ad Hoc Distributed Queries allows users to query data and execute statements on external data sources. This functionality should be disabled. <br><br> <b>Rationale:</b> <br>This feature can be used to remotely access and exploit vulnerabilities on remote SQL Server instances and to run unsafe Visual Basic for Application functions. <br><br> <b>Audit:</b> <br> Run the following T-SQL command: <br> <p style =""font-family : Courier New""> SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use <br>FROM sys.configurations <br>WHERE name = 'Ad Hoc Distributed Queries';</p> Both value columns must show 0. <br><br> <b>Remediation: </b> <br>For AWS RDS Instances, please refer to the documentation for using Parameter Groups here: <br> Working with parameter groups Run the following T-SQL command: <p style =""font-family : Courier New""> EXECUTE sp_configure 'show advnced options', 1; <br>RECONFIGURE; <br>EXECUTE sp_configure 'Ad Hoc Distributed Queries', 0; <br>RECONFIGURE; <br>GO <br> EXECUTE sp_configure 'show advanced options', 0; RECONFIGURE; </p> <b>Default Value:</b> <br>0 (disabled) <br><br> <b>References: </b> <br><a href=""https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWit hParamGroups.html"">1. https://learn.microsoft.com/en-us/sql/t-sql/statements/create-assembly-transactsql</a> <br> <a href=""https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/adhoc-distributed-queries-server-configuration-option"">2.https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithParamGroups.html</a> <br></p>","SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'Ad Hoc Distributed Queries';",1,2,0,0,,1,3,,"EXECUTE sp_configure 'show advanced options', 1;RECONFIGURE;"," EXECUTE sp_configure 'Ad Hoc Distributed Queries', 0; RECONFIGURE;"," EXECUTE sp_configure 'show advanced options', 0; RECONFIGURE;",Ensure 'Ad Hoc Distributed Queries' Server Configuration Option is set to '0',,,,,,,0,no auto remediation
4,2.2,"<p style ="" font-size: 80%""> <h4>2.2 Ensure 'CLR Enabled' Server Configuration Option is set to '0' (Automated)</h4> <div style=""margin-top: 0px;""></div> <b>Profile Applicability:</b> <br> &bull; Level 1 - Database Engine <br> &bull; Level 1 - AWS RDS <div style=""margin-top: 0px;""></div> <b>Description:</b> <br>The clr enabled option specifies whether user assemblies can be run by SQL Server. <div style=""margin-top: 0px;""></div> <b>Rationale:</b> <br>Enabling use of CLR assemblies widens the attack surface of SQL Server and puts it at risk from both inadvertent and malicious assemblies. <div style=""margin-top: 0px;""></div> <b>Impact:</b> <br>If CLR assemblies are in use, applications may need to be rearchitected to eliminate their usage before disabling this setting. Alternatively, some organizations may allow this setting to be enabled 1 for assemblies created with the SAFE permission set, but disallow assemblies created with the riskier UNSAFE and EXTERNAL_ACCESS permission sets. To find user-created assemblies, run the following query in all databases, replacing &lt;database_name> with each database name: <p style =""font-family : Courier New""> USE [&lt;database_name>]<br> GO<br> SELECT name AS Assembly_Name, permission_set_desc<br> FROM sys.assemblies<br> WHERE is_user_defined = 1;<br> GO </p> <div style=""margin-top: 0px;""></div> <b>Audit:</b> Run the following T-SQL command: <p style =""font-family : Courier New""> SELECT name,<br> CAST(value as int) as value_configured,<br> CAST(value_in_use as int) as value_in_use<br> FROM sys.configurations<br> WHERE name = 'clr strict security'; </p> If both values are 1, this recommendation is Not Applicable. Otherwise, run the following T-SQL command: <p style =""font-family : Courier New""> SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'clr enabled'; </p> Both value columns must show 0 to be compliant. <div style=""margin-top: 0px;""></div> <b>Remediation: </b> <br>For AWS RDS Instances, please refer to the documentation for using Parameter Groups here: <a href=""https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithParamGroups.html"">Working with parameter groups</a> <br>Otherwise, run the following T-SQL command: <p style =""font-family : Courier New ; ""> EXECUTE sp_configure 'clr enabled', 0;<br> RECONFIGURE; </p> Restart the Database Engine. <div style=""margin-top: 0px;""></div> <b>Default Value:</b> <br>By default, this option is disabled (0). <div style=""margin-top: 0px;""></div> <b>References: </b> <br> <a href=""https://learn.microsoft.com/en-us/sql/t-sql/statements/create-assembly-transact-sql""> 1.https://learn.microsoft.com/en-us/sql/t-sql/statements/create-assembly-transact-sql</a> <a href=""https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithParamGroups.html""> 2.https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithParamGroups.html</a> <br> </p>","SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'clr enabled';",1,2,0,0,,1,1,,"EXECUTE sp_configure 'clr enabled', 0;RECONFIGURE;",,,Ensure 'CLR Enabled' Server Configuration Option is set to '0',,,,,,,1,T-sql
5,2.3,"<p style =""font-family : Times New Roman""><h3>2.3 Ensure 'Cross DB Ownership Chaining' Server Configuration Option is set to '0' (Automated) </h3> <br> <b>Profile Applicability:</b> <br> &bull; Level 1 - Database Engine <br>&bull; Level 1 - AWS RDS <br><br> <b>Description:</b> <br>The cross db ownership chaining option controls cross-database ownership chaining across all databases at the instance (or server) level. <br><br> <b>Rationale:</b> <br>When enabled, this option allows a member of the db_owner role in a database to gain access to objects owned by a login in any other database, causing an unnecessary information disclosure. When required, cross-database ownership chaining should only be enabled for the specific databases requiring it instead of at the instance level for all databases by using the ALTER DATABASE<database_name>SET DB_CHAINING ON command. This database option may not be changed on the master, model, or tempdb system databases. <br><br> <b>Audit:</b> <br> Run the following T-SQL command: <br> <p style =""font-family : Courier New"">SELECT name,<br> CAST(value as int) as value_configured,<br> CAST(value_in_use as int) as value_in_use<br> FROM sys.configurations <br> WHERE name = 'cross db ownership chaining';</p> Both value columns must show 0 to be compliant. <br><br> <b>Remediation: </b> <br>For AWS RDS Instances, please refer to the documentation for using Parameter Groups here: <a href=""https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithParamGroups.html"" >Working with parameter groups</a> Run the following T-SQL command: <p style =""font-family : Courier New""> EXECUTE sp_configure 'cross db ownership chaining', 0;<br> RECONFIGURE;<br> GO </p> <b>Default Value:</b> <br>By default, this option is disabled (0). <br><br> <b>References: </b> <br><a href=""https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/crossdb-ownership-chaining-server-configurationoption"">1.https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/crossdb-ownership-chaining-server-configuration-option</a> <br> <a href=""https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithParamGroups.html"">2.https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithParamGroups.html</a> <br></p>","SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'cross db ownership chaining';",1,2,0,0,,1,1,,"EXECUTE sp_configure 'cross db ownership chaining', 0; RECONFIGURE;",,,Ensure 'Cross DB Ownership Chaining' Server Configuration Option is set to '0',,,,,,,2,user adds string to t-sql 
6,2.4,"<p style =""font-family : Times New Roman""><h3>2.4 Ensure 'Database Mail XPs' Server Configuration Option is set to '0' (Automated)</h3> <p><br /><strong>Profile Applicability:</strong> <br />&bull; Level 1 - Database Engine <br />&bull; Level 1 - AWS RDS <br /><br /><strong>Description:</strong> <br />The Database Mail XPs option controls the ability to generate and transmit email messages from SQL Server. <br /><br /><strong>Rationale:</strong> <br />Disabling the Database Mail XPs option reduces the SQL Server surface, eliminates a DOS attack vector and channel to exfiltrate data from the database server to a remote host. <br /><br /><strong>Audit:</strong> <br />Run the following T-SQL command:</p> <p style=""font-family: Courier New;"">SELECT name,<br />CAST(value as int) as value_configured,<br />CAST(value_in_use as int) as value_in_use<br />FROM sys.configurations<br />WHERE name = 'Database Mail XPs';</p> <p>Both value columns must show 0 to be compliant. <br /><br /><strong>Remediation: </strong> <br />For AWS RDS Instances, please refer to the documentation for using Parameter Groups here: <a href=""https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithParamGroups.html"">Working with parameter groups</a> Run the following T-SQL command:</p> <p style=""font-family: Courier New;"">EXECUTE sp_configure 'show advanced options', 1;<br />RECONFIGURE;<br />EXECUTE sp_configure 'Database Mail XPs', 0;<br />RECONFIGURE;<br />GO<br />EXECUTE sp_configure 'show advanced options', 0; <br />RECONFIGURE;</p> <p><strong>Default Value:</strong> <br />By default, this option is disabled (0). <br /><br /><strong>References: </strong> <br /><a href=""https://learn.microsoft.com/en-us/sql/relational-databases/database-mail/database-mail?view=sql-server-ver16"">. https://learn.microsoft.com/en-us/sql/relational-databases/databasemail/database-mail</a> </p></P>","SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'Database Mail XPs';",1,2,0,0,,1,3,,"EXECUTE sp_configure 'show advanced options', 1; RECONFIGURE;","EXECUTE sp_configure 'Database Mail XPs', 0; RECONFIGURE;","EXECUTE sp_configure 'show advanced options', 0; RECONFIGURE;",Ensure 'Database Mail XPs' Server Configuration Option is set to '0',,,,,,,,
7,2.5,"<p style ="" font-size: 80%""><h4>2.5 Ensure 'Ole Automation Procedures' Server Configuration Option is set to '0' (Automated)</h4> <div style=""margin-top: 0px;""></div> <b>Profile Applicability:</b> <br> &bull; Level 1 - Database Engine <b>Description:</b> <br>The Ole Automation Procedures option controls whether OLE Automation objects can be instantiated within Transact-SQL batches. These are extended stored procedures that allow SQL Server users to execute functions external to SQL Server. <div style=""margin-top: 0px;""></div> <b>Rationale:</b> <br>Enabling this option will increase the attack surface of SQL Server and allow users to execute functions in the security context of SQL Server. <div style=""margin-top: 0px;""></div> <b>Audit:</b> Run the following T-SQL command: <p style =""font-family : Courier New""> SELECT name,<br> CAST(value as int) as value_configured,<br> CAST(value_in_use as int) as value_in_use<br> FROM sys.configurations<br> WHERE name = 'Ole Automation Procedures'; </p> Both value columns must show 0 to be compliant. <div style=""margin-top: 0px;""></div> <b>Remediation: </b> <br>Run the following T-SQL command: <p style =""font-family : Courier New ; ""> EXECUTE sp_configure 'show advanced options', 1;<br> RECONFIGURE;<br> EXECUTE sp_configure 'Ole Automation Procedures', 0;<br> RECONFIGURE;<br> GO<br> EXECUTE sp_configure 'show advanced options', 0;<br> RECONFIGURE; </p> <div style=""margin-top: 0px;""></div> <b>Default Value:</b> <br>By default, this option is disabled (0). <br><br> <b>References: </b> <br><a href=""https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/ole-automation-procedures-server-configuration-option?view=sql-server-ver16"">1.https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/oleautomation-procedures-server-configuration-option</a> <br> </p>","SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'Ole Automation Procedures';",1,2,0,0,,1,3,,"EXECUTE sp_configure 'show advanced options', 1; RECONFIGURE;","EXECUTE sp_configure 'Ole Automation Procedures', 0; RECONFIGURE;","EXECUTE sp_configure 'show advanced options', 0; RECONFIGURE;",Ensure 'Ole Automation Procedures' Server Configuration Option is set to '0',,,,,,,,
8,2.6,"<p style =""font-family : Times New Roman""><h3>2.6 Ensure 'Remote Access' Server Configuration Option is set to '0' (Automated)</h3> <br> <b>Profile Applicability:</b> <br> &bull; Level 1 - Database Engine <br> &bull; Level 1 - AWS RDS <br><br> <b>Description:</b> <br>The remote access option controls the execution of local stored procedures on remoteservers or remote stored procedures on local server<br><br> <b>Rationale:</b> <br>Functionality can be abused to launch a Denial-of-Service (DoS) attack on remoteservers by off-loading query processing to a target.<br><br> <br> <b>Impact</b> <br>Per Microsoft: This feature will be removed in the next version of Microsoft SQL Server. Do not use this feature in new development work, and modify applications that currently use this feature as soon as possible. Use sp_addlinkedserver instead.<br> <b>Audit:</b> <br> Run the following T-SQL command: <br> <p style =""font-family : Courier New""> SELECT name,<br> CAST(value as int) as value_configured,<br> CAST(value_in_use as int) as value_in_use<br> FROM sys.configurations<br> WHERE name = 'remote access'; </p> Both value columns must show 0. <br><br> <b>Remediation: </b> For AWS RDS Instances, please refer to the documentation for using Parameter Groups here: <a href= ""https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithParamGroups.html"">Working with parameter groups</a> Otherwise, run the following T-SQL command: <p style =""font-family : Courier New""> EXECUTE sp_configure 'show advanced options', 1;<br> RECONFIGURE;<br> EXECUTE sp_configure 'remote access', 0;<br> RECONFIGURE;<br> GO<br> EXECUTE sp_configure 'show advanced options', 0;<br> RECONFIGURE; </p> Restart the Database Engine <b>Default Value:</b> <br>By default, this option is enabled (1). <br><br> <b>References: </b> <br><a href=""https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-remote-access-server-configuration-option"">1.https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-remote-access-server-configuration-option</a> <br><a href=""https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithParamGroups.html"">2.https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithParamGroups.html</a> <br> </p>","SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'remote access';",1,2,0,0,,1,3,,"EXECUTE sp_configure 'show advanced options', 1; RECONFIGURE;","EXECUTE sp_configure 'remote access', 0; RECONFIGURE;","EXECUTE sp_configure 'show advanced options', 0; RECONFIGURE;",Ensure 'Remote Access' Server Configuration Option is set to '0',,,,,,,,
9,2.7,"<p>2.7 Ensure 'Remote Admin Connections' Server Configuration Option is set to '0' (Automated)<br> <br> Profile Applicability:<br> &bull;  Level 1 - Database Engine<br> <br> Description:<br> The remote admin connections option controls whether a client application on a remote<br> computer can use the Dedicated Administrator Connection (DAC).<br> <br> Rationale:<br> The Dedicated Administrator Connection (DAC) lets an administrator access a running<br> server to execute diagnostic functions or Transact-SQL statements, or to troubleshoot<br> problems on the server, even when the server is locked or running in an abnormal state<br> and not responding to a SQL Server Database Engine connection. In a cluster scenario,<br> the administrator may not actually be logged on to the same node that is currently<br> hosting the SQL Server instance and thus is considered ""remote"". Therefore, this<br> setting should usually be enabled (1) for SQL Server failover clusters; otherwise, it<br> should be disabled (0) which is the default.<br> <br> Audit:<br> Run the following T-SQL command:<br> SELECT name,<br> CAST(value as int) as value_configured,<br> CAST(value_in_use as int) as value_in_use<br> FROM sys.configurations<br> WHERE name = 'remote admin connections'<br> AND SERVERPROPERTY('IsClustered') = 0;<br> If no data is returned, the instance is a cluster and this recommendation is not<br> applicable. If data is returned, then both the value columns must show 0 to be<br> compliant.<br> <br> Remediation:<br> Run the following T-SQL command on non-clustered installations:<br> EXECUTE sp_configure 'remote admin connections', 0;<br> RECONFIGURE;<br> GO<br> <br> Default Value:<br> By default, this option is disabled (0), only local connections may use the DAC.<br> <br> References:<br> 1. https://learn.microsoft.com/en-us/sql/database-engine/configure-<br> windows/remote-admin-connections-server-configuration-option<br> By default, this option is enabled (1).<br> <br> References:<br> 1. https://learn.microsoft.com/en-us/sql/database-engine/configure-<br> windows/configure-the-remote-access-server-configuration-option<br> 2. https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWit<br> hParamGroups.html<br> <br> <br> <br> <br> <br> <br> <br> <br> <br></p>","SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'remote admin connections' AND SERVERPROPERTY('IsClustered') = 0;",1,2,0,0,,1,1,,"EXECUTE sp_configure 'remote admin connections', 0; RECONFIGURE;",,,Ensure 'Remote Admin Connections' Server Configuration Option is set to '0',,,,,,,,
10,2.8,"<p style ="" font-size: 80%""> <h4>2.8 Ensure 'Scan For Startup Procs' Server Configuration Option is set to '0' (Automated) </h4> <div style=""margin-top: 0px;""></div> <b>Profile Applicability:</b> <br> &bull; Level 1 - Database Engine <div style=""margin-top: 0px;""></div> <b>Description:</b> <br>The scan for startup procs option, if enabled, causes SQL Server to scan for and automatically run all stored procedures that are set to execute upon service startup. <div style=""margin-top: 0px;""></div> <b>Rationale:</b> <br>Enforcing this control reduces the threat of an entity leveraging these facilities for malicious purposes. <div style=""margin-top: 0px;""></div> <b>Impact:</b> <br>Setting Scan for Startup Procedures to 0 will prevent certain audit traces and other commonly used monitoring stored procedures from re-starting on start up. Additionally, replication requires this setting to be enabled (1) and will automatically change this setting if needed. <div style=""margin-top: 0px;""></div> <b>Audit:</b> Run the following T-SQL command: <p style =""font-family : Courier New""> SELECT name,<br> CAST(value as int) as value_configured,<br> CAST(value_in_use as int) as value_in_use<br> FROM sys.configurations<br> WHERE name = 'scan for startup procs'; </p> Both value columns must show 0. <div style=""margin-top: 0px;""></div> <b>Remediation: </b> <br>Run the following T-SQL command: <p style =""font-family : Courier New ; ""> EXECUTE sp_configure 'show advanced options', 1;<br> RECONFIGURE;<br> EXECUTE sp_configure 'scan for startup procs', 0;<br> RECONFIGURE;<br> GO<br> EXECUTE sp_configure 'show advanced options', 0;<br> RECONFIGURE; </p> Restart the Database Engine. <div style=""margin-top: 0px;""></div> <b>Default Value:</b> <br>By default, this option is disabled (0) <div style=""margin-top: 0px;""></div> <b>References: </b> <br> <a href=""https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-scan-for-startup-procs-server-configuration-option""> 1.https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-scan-for-startup-procs-server-configuration-option</a> <br> </p>","SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'scan for startup procs';",1,2,0,0,,1,3,,"EXECUTE sp_configure 'show advanced options', 1; RECONFIGURE;","EXECUTE sp_configure 'scan for startup procs', 0; RECONFIGURE;","EXECUTE sp_configure 'show advanced options', 0; RECONFIGURE;",Ensure 'Scan For Startup Procs' Server Configuration Option is set to '0' ,,,,,,,,
11,2.9,2.9 Ensure 'Trustworthy' Database Property is set to 'Off' (Automated),SELECT name FROM sys.databases WHERE is_trustworthy_on = 1 AND name != 'msdb';,2,0,,,,2,1,<database_name>,ALTER DATABASE [<database_name>] SET TRUSTWORTHY OFF;,,,Ensure 'Trustworthy' Database Property is set to 'Off',,,,,,,,
12,2.10.,2.10 Ensure Unnecessary SQL Server Protocols are set to 'Disabled' (Manual),0,0,,0,0,,0,0,,,,,Ensure Unnecessary SQL Server Protocols are set to 'Disabled',,,,,,,,
13,2.11,2.11 Ensure SQL Server is configured to use non-standard ports (Automated),"SELECT 'use non-standard ports', count(*) as no  FROM sys.dm_server_registry WHERE value_name like '%Tcp%' and value_data='1433';",1,1,0,,,0,0,,,,,Ensure SQL Server is configured to use non-standard ports,,,,,,,,
14,2.12,2.12 kooft,"DECLARE @getValue INT; EXEC master.sys.xp_instance_regread @rootkey = N'HKEY_LOCAL_MACHINE', @key = N'SOFTWARE\Microsoft\Microsoft SQL Server\MSSQLServer\SuperSocketNetLib',  @value_name = N'HideInstance',  @value = @getValue OUTPUT;  SELECT 'Hide Instance', @getValue;",1,1,1,,,1,1,,"EXEC master.sys.xp_instance_regwrite @rootkey = N'HKEY_LOCAL_MACHINE',  @key = N'SOFTWARE\Microsoft\Microsoft SQL Server\MSSQLServer\SuperSocketNetLib',  @value_name = N'HideInstance',  @type = N'REG_DWORD', @value = 1;",,,Ensure 'Hide Instance' option is set to 'Yes' for Production SQL Server instances,,,,,,,,
15,2.13,"<p style ="" font-size: 80%""> <h4>2.13 Ensure the 'sa' Login Account is set to 'Disabled' (Automated) </h4> <div style=""margin-top: 0px;""></div> <b>Profile Applicability:</b> <br> &bull; Level 1 - Database Engine <br> &bull; Level 1 - AWS RDS <div style=""margin-top: 0px;""></div> <b>Description:</b> <br>The sa account is a widely known and often widely used SQL Server account with sysadmin privileges. This is the original login created during installation and always has the principal_id=1 and sid=0x01. <div style=""margin-top: 0px;""></div> <b>Rationale:</b> <br>Enforcing this control reduces the probability of an attacker executing brute force attacks against a well-known principal. <div style=""margin-top: 0px;""></div> <b>Impact:</b> <br>It is not a good security practice to code applications or scripts to use the sa account. However, if this has been done, disabling the sa account will prevent scripts and applications from authenticating to the database server and executing required tasks or functions. <div style=""margin-top: 0px;""></div> <b>Audit:</b> <br>Use the following syntax to determine if the sa account is disabled. Checking for sid=0x01 ensures that the original sa account is being checked in case it has been renamed per best practices. <p style =""font-family : Courier New""> SELECT name, is_disabled<br> FROM sys.server_principals<br> WHERE sid = 0x01<br> AND is_disabled = 0;<br> </p> No rows should be returned to be compliant. <br>An is_disabled value of 0 indicates the login is currently enabled and therefore needs remediation. <div style=""margin-top: 0px;""></div> <b>Remediation: </b> <br>Run the following T-SQL command: <p style =""font-family : Courier New ; ""> USE [master]<br> GO<br> DECLARE @tsql nvarchar(max)<br> SET @tsql = 'ALTER LOGIN ' + SUSER_NAME(0x01) + ' DISABLE'<br> EXEC (@tsql)<br> GO </p> <div style=""margin-top: 0px;""></div> <b>Default Value:</b> <br>By default, the sa login account is disabled at install time when Windows Authentication Mode is selected. If mixed mode (SQL Server and Windows Authentication) is selected at install, the default for the sa login is enabled. <div style=""margin-top: 0px;""></div> <b>References: </b> <br> <a href=""https://learn.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-principals-transact-sql""> 1.https://learn.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-principals-transact-sql</a><br <a href=""https://learn.microsoft.com/en-us/sql/t-sql/statements/alter-login-transact-sql""> 2.https://learn.microsoft.com/en-us/sql/t-sql/statements/alter-login-transact-sql</a><br> <a href=""https://learn.microsoft.com/en-us/sql/relational-databases/security/choose-an-authentication-mode""> 3.https://learn.microsoft.com/en-us/sql/relational-databases/security/choose-an-authentication-mode</a> <br> </p>","SELECT name, is_disabled FROM sys.server_principals WHERE sid = 0x01 AND is_disabled = 0",2,,,,,1,1,,DECLARE @tsql nvarchar(max); SET @tsql = 'ALTER LOGIN ' + SUSER_NAME(0x01) + ' DISABLE' ;EXEC (@tsql),,,Ensure the 'sa' Login Account is set to 'Disabled',,,,,,,,
16,2.14,"<p style ="" font-size: 80%""> <h4>2.14 Ensure the 'sa' Login Account has been renamed (Automated) </h4> <div style=""margin-top: 0px;""></div> <b>Profile Applicability:</b> <br> &bull; Level 1 - Database Engine <div style=""margin-top: 0px;""></div> <b>Description:</b> <br>The sa account is a widely known and often widely used SQL Server login with sysadmin privileges. The sa login is the original login created during installation and always has principal_id=1 and sid=0x01. <div style=""margin-top: 0px;""></div> <b>Rationale:</b> <br>It is more difficult to launch password-guessing and brute-force attacks against the sa login if the name is not known. <div style=""margin-top: 0px;""></div> <b>Impact:</b> <br>It is not a good security practice to code applications or scripts to use the sa login. However, if this has been done, renaming the sa login will prevent scripts and applications from authenticating to the database server and executing required tasks or functions. <div style=""margin-top: 0px;""></div> <b>Audit:</b> <br>Use the following syntax to determine if the sa login (principal) is renamed. <p style =""font-family : Courier New""> SELECT name<br> FROM sys.server_principals<br> WHERE sid = 0x01; </p> A name of sa indicates the account has not been renamed and therefore needs remediation. <div style=""margin-top: 0px;""></div> <b>Remediation: </b> <br>Replace the &lt;different_user> value within the below syntax and execute to rename the sa login. <p style =""font-family : Courier New ; ""> ALTER LOGIN sa WITH NAME = &lt;different_user>; </p> <div style=""margin-top: 0px;""></div> <b>Default Value:</b> <br>By default, the sa login name is 'sa' <div style=""margin-top: 0px;""></div> <b>References: </b> <br> <a href=""https://learn.microsoft.com/en-us/sql/relational-databases/security/choose-an-authentication-model""> 1.https://learn.microsoft.com/en-us/sql/relational-databases/security/choose-an-authentication-model</a> <br> </p>",SELECT name FROM sys.server_principals WHERE sid = 0x01;,5,1,sa,,,2,1,<different_name>,ALTER LOGIN sa WITH NAME = <different_name>;,,,Ensure the 'sa' Login Account has been renamed,,,,,,,,
17,2.15,2.15 lolo,"SELECT name, containment, containment_desc, is_auto_close_on FROM sys.databases WHERE containment <> 0 and is_auto_close_on = 1;",2,1,,,,2,1,<database_name>,ALTER DATABASE SET AUTO_CLOSE OFF;,,,Ensure 'AUTO_CLOSE' is set to 'OFF' on contained databases ,,,,,,,,
18,2.16,"<p style ="" font-size: 80%""> <h4>2.16 Ensure no login exists with the name 'sa' (Automated)</h4> <div style=""margin-top: 0px;""></div> <b>Profile Applicability:</b> <br> &bull; Level 1 - Database Engine <br> &bull; Level 1 - AWS RDS <div style=""margin-top: 0px;""></div> <b>Description:</b> <br>The sa login (e.g. principal) is a widely known and often widely used SQL Server account. Therefore, there should not be a login called sa even when the original sa login (principal_id = 1) has been renamed. <div style=""margin-top: 0px;""></div> <b>Rationale:</b> <br>Enforcing this control reduces the probability of an attacker executing brute force attacks against a well-known principal name. <div style=""margin-top: 0px;""></div> <b>Impact:</b> <br>It is not a good security practice to code applications or scripts to use the sa account. Given that it is a best practice to rename and disable the sa account, some 3rd party applications check for the existence of a login named sa and if it doesn't exist, creates one. Removing the sa login will prevent these scripts and applications from authenticating to the database server and executing required tasks or functions. <div style=""margin-top: 0px;""></div> <b>Audit:</b> Use the following syntax to determine if there is an account named sa. <p style =""font-family : Courier New""> SELECT name,<br> CAST(value as int) as value_configured,<br> CAST(value_in_use as int) as value_in_use<br> FROM sys.configurations<br> WHERE name = 'clr strict security'; </p> If both values are 1, this recommendation is Not Applicable. Otherwise, run the following T-SQL command: <p style =""font-family : Courier New""> SELECT principal_id, name<br> FROM sys.server_principals<br> WHERE name = 'sa'; </p> No rows should be returned. <div style=""margin-top: 0px;""></div> <b>Remediation: </b> <br>Execute the appropriate ALTER statement below based on the principal_id returned for the login named sa. Replace the <different_name> value within the below syntax and execute to rename the sa login. <br>Otherwise, run the following T-SQL command: <p style =""font-family : Courier New ; ""> USE [master]<br> GO<br> -- If principal_id = 1 or the login owns database objects, rename the sa<br> login<br> ALTER LOGIN [sa] WITH NAME = &lt;different_name>; <br> GO </p> Restart the Database Engine. <div style=""margin-top: 0px;""></div> <b>Default Value:</b> <br>The login with principal_id = 1 is named sa by default. <div style=""margin-top: 0px;""></div> </p>","SELECT principal_id, name FROM sys.server_principals WHERE name = 'sa';",2,,,,,2,1,<different_name>,ALTER login [sa] WITH NAME = test,,,Ensure no login exists with the name 'sa',,,,,,,,
19,2.17,"<h4>2.17 Ensure 'clr strict security' Server Configuration Option is set to '1' (Automated)</h4> <div style=""margin-top: 0px;"">&nbsp;</div> <p style=""font-size: 80%;""><strong>Profile Applicability:</strong> <br />&bull; Level 1 - Database Engine <br />&bull; Level 1 - AWS RDS</p> <div style=""margin-top: 0px;"">&nbsp;</div> <p style=""font-size: 80%;""><strong>Description:</strong> <br />The clr strict security option specifies whether the engine applies the PERMISSION_SET on the assemblies.</p> <div style=""margin-top: 0px;"">&nbsp;</div> <p style=""font-size: 80%;""><strong>Rationale:</strong> <br />Enabling use of CLR assemblies widens the attack surface of SQL Server and puts it at risk from both inadvertent and malicious assemblies.</p> <div style=""margin-top: 0px;"">&nbsp;</div> <p style=""font-size: 80%;""><strong>Impact:</strong> <br />If CLR assemblies are in use, applications may need to be rearchitected to eliminate their usage before enabling this setting. To find user-created assemblies, run the following query in all databases, replacing &lt;database_name&gt; with each database name:</p> <p style=""font-family: Courier New;"">USE [&lt;database_name&gt;]<br />GO<br />SELECT name AS Assembly_Name, permission_set_desc<br />FROM sys.assemblies<br />WHERE is_user_defined = 1; GO</p> <div style=""margin-top: 0px;"">&nbsp;</div> <p style=""font-size: 80%;""><strong>Audit:</strong> <br />Run the following T-SQL command:</p> <p style=""font-family: Courier New;"">SELECT name,<br />CAST(value as int) as value_configured,<br />CAST(value_in_use as int) as value_in_use<br />FROM sys.configurations<br />WHERE name = 'clr strict security';</p> <p style=""font-size: 80%;"">Both value columns must show 1 to be compliant.</p> <p style=""font-size: 80%;""><strong>Remediation: </strong> <br />Run the following T-SQL command:</p> <p style=""font-family: Courier New;"">EXECUTE sp_configure 'show advanced options', 1; RECONFIGURE;<br />EXECUTE sp_configure 'clr strict security', 1;<br />RECONFIGURE;<br />GO<br />EXECUTE sp_configure 'show advanced options', 0;<br />RECONFIGURE;</p> <p style=""font-size: 80%;""><strong>Default Value:</strong> <br />By default, this option is Enabled (1).</p> <div style=""margin-top: 0px;"">&nbsp;</div> <p style=""font-size: 80%;""><strong>References: </strong> <br /><a href=""https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/clr-strict-security""> 1.https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/clr-strict-security</a></p>","SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'clr strict security';",1,2,1,1,,1,3,,"EXECUTE sp_configure 'show advanced options', 1; RECONFIGURE;","EXECUTE sp_configure 'clr strict security', 1; RECONFIGURE;","EXECUTE sp_configure 'show advanced options', 0; RECONFIGURE;",Ensure 'clr strict security' Server Configuration Option is set to '1',,,,,,,,
20,3.1,"<p style ="" font-size: 80%""> <h4>3.1 Ensure 'Server Authentication' Property is set to 'Windows Authentication Mode' (Automated) </h4> <div style=""margin-top: 0px;""></div> <b>Profile Applicability:</b> <br> &bull; Level 1 - Database Engine <div style=""margin-top: 0px;""></div> <b>Description:</b> <br>Uses Windows Authentication to validate attempted connections. <div style=""margin-top: 0px;""></div> <b>Rationale:</b> <br>Windows provides a more robust authentication mechanism than SQL Server authentication. <div style=""margin-top: 0px;""></div> <b>Impact:</b> <br>Changing the login mode configuration requires a restart of the service. <div style=""margin-top: 0px;""></div> <b>Audit:</b> Execute the following syntax: <p style =""font-family : Courier New""> SELECT SERVERPROPERTY('IsIntegratedSecurityOnly') as [login_mode]; </p> A login_mode of 1 indicates the Server Authentication property is set to Windows Authentication Mode. A login_mode of 0 indicates mixed mode authentication. <div style=""margin-top: 0px;""></div> <b>Remediation: </b> <br>Perform either the GUI or T-SQL method shown:<br> <b>GUI Method</b><br> <ol> <li>Open SQL Server Management Studio.</li> <li>Open the Object Explorer tab and connect to the target SQL Server instance.</li> <li>Right click the instance name and select Properties.</li> <li>Select the Security page from the left menu.</li> <li>Set the Server authentication setting to Windows Authentication Mode.</li> </ol> <b>T-SQL Method</b><br> Run the following T-SQL in a Query Window: <p style =""font-family : Courier New ; ""> USE [master]<br> GO<br> EXEC xp_instance_regwrite N'HKEY_LOCAL_MACHINE',<br> N'Software\Microsoft\MSSQLServer\MSSQLServer', N'LoginMode', REG_DWORD, 1<br> GO </p> Restart the SQL Server service for the change to take effect. <div style=""margin-top: 0px;""></div> <b>Default Value:</b> <br>Windows Authentication Mode <div style=""margin-top: 0px;""></div> <b>References: </b> <br> <a href=""https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/server-properties-security-page""> 1.https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/server-properties-security-page</a> <br> </p>","SELECT 'Windows Authentication Mode' as name, CAST(SERVERPROPERTY('IsIntegratedSecurityOnly') as int) as [login_mode];",1,1,1,,,1,1,,"EXEC master.dbo.xp_instance_regwrite N'HKEY_LOCAL_MACHINE', N'Software\Microsoft\MSSQLServer\MSSQLServer', N'LoginMode', REG_DWORD, 1",,,Ensure 'Server Authentication' Property is set to 'Windows Authentication Mode' ,,,,,,,,
21,3.2,"<p style ="" font-size: 80%""> <h4>3.2 Ensure CONNECT permissions on the 'guest' user is Revoked within all SQL Server databases (Automated) </h4> <div style=""margin-top: 0px;""></div> <b>Profile Applicability:</b> <br> &bull; Level 1 - Database Engine <br> &bull; Level 1 - AWS RDS <div style=""margin-top: 0px;""></div> <b>Description:</b> <br>Remove the right of the guest user to connect to SQL Server databases, except for master, msdb, tempdb, and, on AWS RDS instances, rdsadmin. <div style=""margin-top: 0px;""></div> <b>Rationale:</b> <br>A login assumes the identity of the guest user when a login has access to SQL Server but does not have access to a database through its own account and the database has a guest user account. Revoking the CONNECT permission for the guest user will ensure that a login is not able to access database information without explicit access to do so. <div style=""margin-top: 0px;""></div> <b>Impact:</b> <br>When CONNECT permission to the guest user is revoked, a SQL Server instance login must be mapped to a database user explicitly in order to have access to the database. <div style=""margin-top: 0px;""></div> <b>Audit:</b> <br>Run the following code snippet for each database (replacing &lt;database_name> as appropriate) in the instance to determine if the guest user has CONNECT permission. <p style =""font-family : Courier New""> USE &lt;database_name>; <br> GO<br> SELECT DB_NAME() AS DatabaseName, 'guest' AS Database_User,<br> [permission_name], [state_desc]<br> FROM sys.database_permissions<br> WHERE [grantee_principal_id] = DATABASE_PRINCIPAL_ID('guest')<br> AND [state_desc] LIKE 'GRANT%'<br> AND [permission_name] = 'CONNECT'<br> AND DB_NAME() NOT IN ('master','tempdb','msdb'); </p> No rows should be returned. On AWS RDS instance, if only rdsadmin is returned, this is a pass. <br>An is_disabled value of 0 indicates the login is currently enabled and therefore needs remediation. <div style=""margin-top: 0px;""></div> <b>Remediation: </b> <br>The following code snippet revokes CONNECT permissions from the guest user in a database. Replace &lt;database_name> as appropriate: <p style =""font-family : Courier New ; ""> USE &lt;database_name>;<br> GO<br> REVOKE CONNECT FROM guest;<br> </p> <div style=""margin-top: 0px;""></div> <b>Default Value:</b> <br>The guest user account is added to each new database but without CONNECT permission by default. <div style=""margin-top: 0px;""></div> <b>References: </b> <br> <a href=""https://learn.microsoft.com/en-us/sql/relational-databases/policy-based-management/guest-permissions-on-user-databases""> 1.https://learn.microsoft.com/en-us/sql/relational-databases/policy-based-management/guest-permissions-on-user-databases</a><br> <br> </p>","SELECT DB_NAME() AS DatabaseName, 'guest' AS Database_User,[permission_name], [state_desc] FROM sys.database_permissions WHERE [grantee_principal_id] = DATABASE_PRINCIPAL_ID('guest') AND [state_desc] LIKE 'GRANT%' AND [permission_name] = 'CONNECT' AND DB_NAME() NOT IN ('master','tempdb','msdb');",2,,,,,1,1,,REVOKE CONNECT FROM guest;,,,Ensure CONNECT permissions on the 'guest' user is Revoked within all SQL Server databases ,,,,,,,,
22,3.3,3.3,EXEC sp_change_users_login @Action='Report';,2,,,,,2,1,<username>,DROP USER <username> ;,,,Ensure 'Orphaned Users' are Dropped From SQL Server Databases ,,,,,,,,
23,3.4,3.4,"SELECT name AS DBUser FROM sys.database_principals WHERE name NOT IN ('dbo','Information_Schema','sys','guest') AND type IN ('U','S','G') AND authentication_type = 2;",2,,,,,0,0,,,,,Ensure SQL Authentication is not used in contained databases (,,,,,,,,
24,3.5,Ensure the SQL Server's MSSQL Service Account is Not an Administrator (Manual),0,0,,,,,0,0,,,,,Ensure the SQL Server’s MSSQL Service Account is Not an Administrator,,,,,,,,
25,3.6, Ensure the SQL Server's SQLAgent Service Account is Not an Administrator (Manual),0,0,,,,,0,0,,,,,Ensure the SQL Server’s SQLAgent Service Account is Not an Administrator,,,,,,,,
26,3.7,Ensure the SQL Server’s Full-Text Service Account is Not an Administrator (Manual),0,0,,,,,0,0,,,,,Ensure the SQL Server’s Full-Text Service Account is Not an Administrator,,,,,,,,
27,3.8,3.8,SELECT * FROM master.sys.server_permissions WHERE (grantee_principal_id = SUSER_SID(N'public') and state_desc LIKE 'GRANT%') AND NOT (state_desc = 'GRANT' and [permission_name] = 'VIEW ANY DATABASE' and class_desc = 'SERVER') AND NOT (state_desc = 'GRANT' and [permission_name] = 'CONNECT' and class_desc = 'ENDPOINT' and major_id = 2) AND NOT (state_desc = 'GRANT' and [permission_name] = 'CONNECT' and class_desc = 'ENDPOINT' and major_id = 3) AND NOT (state_desc = 'GRANT' and [permission_name] = 'CONNECT' and class_desc = 'ENDPOINT' and major_id = 4) AND NOT (state_desc = 'GRANT' and [permission_name] = 'CONNECT' and class_desc = 'ENDPOINT' and major_id = 5);,2,,,,,2,1,<permission_name>,REVOKE <permission_name> FROM public;,,,Ensure only the default permissions specified by Microsoft are granted to the public server role,,,,,,,,
28,3.9,3.9,"SELECT pr.[name], pe.[permission_name], pe.[state_desc] FROM sys.server_principals pr JOIN sys.server_permissions pe ON pr.principal_id = pe.grantee_principal_id WHERE pr.name like 'BUILTIN%';",2,,,,,2,1,<name>,DROP LOGIN [BUILTIN\<name>],,,Ensure Windows BUILTIN groups are not SQL Logins,,,,,,,,
29,3.10.,3.10.,"SELECT pr.[name] AS LocalGroupName, pe.[permission_name], pe.[state_desc] FROM sys.server_principals pr JOIN sys.server_permissions pe ON pr.[principal_id] = pe.[grantee_principal_id] WHERE pr.[type_desc] = 'WINDOWS_GROUP' AND pr.[name] like CAST(SERVERPROPERTY('MachineName') AS nvarchar) + '%';",2,,,,,2,1,<name>,DROP LOGIN [<name>],,,Ensure Windows local groups are not SQL Logins,,,,,,,,
30,3.11,3.11,SELECT sp.name AS proxyname FROM [msdb].dbo.sysproxylogin spl JOIN sys.database_principals dp ON dp.sid = spl.sid JOIN [msdb].dbo.sysproxies sp ON sp.proxy_id = spl.proxy_id WHERE principal_id = USER_ID('public');,2,,,,,2,1,<proxyname>,"EXEC msdb.dbo.sp_revoke_login_from_proxy @name = N'public', @proxy_name = N'<proxyname>';",,,Ensure the public role in the msdb database is not granted access to SQL Agent proxies,,,,,,,,
31,4.1,Ensure 'MUST_CHANGE' Option is set to 'ON' for All SQL Authenticated Logins (Manual),0,0,,,,,0,0,,,,,Ensure 'MUST_CHANGE' Option is set to 'ON' for All SQL Authenticated Logins,,,,,,,,
32,4.2,"<p style ="" font-size: 80%""> <h4>4.2 Ensure 'CHECK_EXPIRATION' Option is set to 'ON' for All SQL Authenticated Logins Within the Sysadmin Role (Automated) </h4> <div style=""margin-top: 0px;""></div> <b>Profile Applicability:</b> <br> &bull; Level 1 - Database Engine <br> &bull; Level 1 - AWS RDS <div style=""margin-top: 0px;""></div> <b>Description:</b> <br>Applies the same password expiration policy used in Windows to passwords used inside SQL Server. <div style=""margin-top: 0px;""></div> <b>Rationale:</b> <br>Ensuring SQL logins comply with the secure password policy applied by the Windows Server Benchmark will ensure the passwords for SQL logins with sysadmin privileges are changed on a frequent basis to help prevent compromise via a brute force attack. CONTROL SERVER is an equivalent permission to sysadmin and logins with that permission should also be required to have expiring passwords. <div style=""margin-top: 0px;""></div> <b>Impact:</b> <br>This is a mitigating recommendation for systems which cannot follow the recommendation to use only Windows Authenticated logins.<br> Regarding limiting this rule to only logins with sysadmin and CONTROL SERVER privileges,there are too many cases of applications that run with less than sysadmin level privileges that have hard-coded passwords or effectively hard-coded passwords (whatever is set the first time is nearly impossible to change). There are several line-ofbusiness applications that are considered best of breed which have this failing.<br> Also, keep in mind that the password policy is taken from the computer's local policy, which is taken from the Default Domain Policy setting. Many organizations have a different password policy regarding the service accounts. These are handled in AD by setting the account's password to not expire and having some other process track when the password needs to be changed. With this second control in place, this is perfectly acceptable from an audit perspective. If you treat a SQL Server login as a service account, then you have to do the same. This ensures that the password change happens during a communicated downtime window and not arbitrarily. <div style=""margin-top: 0px;""></div> <b>Audit:</b> <br>Run the following T-SQL statement to find sysadmin or equivalent logins with CHECK_EXPIRATION = OFF. <p style =""font-family : Courier New""> SELECT l.[name], 'sysadmin membership' AS 'Access_Method'<br> FROM sys.sql_logins AS l<br> WHERE IS_SRVROLEMEMBER('sysadmin',name) = 1<br> AND l.is_expiration_checked &lt;> 1<br> UNION ALL<br> SELECT l.[name], 'CONTROL SERVER' AS 'Access_Method'<br> FROM sys.sql_logins AS l<br> JOIN sys.server_permissions AS p<br> ON l.principal_id = p.grantee_principal_id<br> WHERE p.type = 'CL' AND p.state IN ('G', 'W')<br> AND l.is_expiration_checked &lt;> 1; </p> No rows should be returned. On AWS RDS instances only returning the account rdsa is a pass. <div style=""margin-top: 0px;""></div> <b>Remediation: </b> <br>For each &lt;login_name> found by the Audit Procedure, execute the following T-SQL statement: <p style =""font-family : Courier New ; ""> ALTER LOGIN [&lt;login_name>] WITH CHECK_EXPIRATION = ON; </p> <div style=""margin-top: 0px;""></div> <b>Default Value:</b> <br>CHECK_EXPIRATION is ON by default when using SSMS to create a SQL authenticated login. CHECK_EXPIRATION is OFF by default when using T-SQL CREATE LOGIN syntax without specifying the CHECK_EXPIRATION option. <div style=""margin-top: 0px;""></div> <b>References: </b> <br> <a href=""https://learn.microsoft.com/en-us/sql/relational-databases/security/password-policy?view=sql-server-ver15""> 1.https://learn.microsoft.com/en-us/sql/relational-databases/security/password-policy?view=sql-server-ver15</a> <br> </p>","SELECT l.[name], 'sysadmin membership' AS 'Access_Method' FROM sys.sql_logins AS l WHERE IS_SRVROLEMEMBER('sysadmin',name) = 1 AND l.is_expiration_checked <> 1 UNION ALL SELECT l.[name], 'CONTROL SERVER' AS 'Access_Method' FROM sys.sql_logins AS l JOIN sys.server_permissions AS p ON l.principal_id = p.grantee_principal_id WHERE p.type = 'CL' AND p.state IN ('G', 'W') AND l.is_expiration_checked <> 1;",2,,,,,2,1,<login_name>,ALTER LOGIN [<login_name>] WITH CHECK_EXPIRATION = ON;,,,Ensure 'CHECK_EXPIRATION' Option is set to 'ON' for All SQL Authenticated Logins Within the Sysadmin Role,,,,,,,,
33,4.3,"<p style ="" font-size: 80%""> <h4>4.3 Ensure 'CHECK_POLICY' Option is set to 'ON' for All SQL Authenticated Logins (Automated) </h4> <div style=""margin-top: 0px;""></div> <b>Profile Applicability:</b> <br> &bull; Level 1 - Database Engine <br> &bull; Level 1 - AWS RDS <div style=""margin-top: 0px;""></div> <b>Description:</b> <br>Applies the same password complexity policy used in Windows to passwords used inside SQL Server. <div style=""margin-top: 0px;""></div> <b>Rationale:</b> <br>Ensure SQL authenticated login passwords comply with the secure password policy applied by the Windows Server Benchmark so that they cannot be easily compromised via brute force attack. <div style=""margin-top: 0px;""></div> <b>Impact:</b> <br>This is a mitigating recommendation for systems which cannot follow the recommendation to use only Windows Authenticated logins.<br> Weak passwords can lead to compromised systems. SQL Server authenticated logins will utilize the password policy set in the computer's local policy, which is typically set by the Default Domain Policy setting.<br> The setting is only enforced when the password is changed. This setting does not force existing weak passwords to be changed. <div style=""margin-top: 0px;""></div> <b>Audit:</b> <br>Use the following code snippet to determine the status of SQL Logins and if their password complexity is enforced. <p style =""font-family : Courier New""> SELECT name, is_disabled<br> FROM sys.sql_logins<br> WHERE is_policy_checked = 0;<br> </p> <div style=""margin-top: 0px;""></div> <b>Remediation: </b> <br>For each &lt;login_name> found by the Audit Procedure, execute the following T-SQL statement: <p style =""font-family : Courier New ; ""> ALTER LOGIN [&lt;login_name>] WITH CHECK_POLICY = ON; </p> Note: In the case of AWS RDS do not perform this remediation for the Master account. <br>Default Value: <br>CHECK_POLICY is ON <div style=""margin-top: 0px;""></div> <b>Default Value:</b> <br>6 SQL Server error log files in addition to the current error log file are retained by default. <div style=""margin-top: 0px;""></div> <b>References: </b> <br> <a href=""https://learn.microsoft.com/en-us/sql/relational-databases/security/password-policy""> 1.https://learn.microsoft.com/en-us/sql/relational-databases/security/password-policy</a> <br> </p>","SELECT name, is_disabled FROM sys.sql_logins WHERE is_policy_checked = 0;",2,,,,,2,1,<login_name>,ALTER LOGIN [<login_name>] WITH CHECK_POLICY = ON;,,,Ensure 'CHECK_POLICY' Option is set to 'ON' for All SQL Authenticated Logins,,,,,,,,
34,5.1,"<p style ="" font-size: 80%""> <h4>5.1 Ensure 'Maximum number of error log files' is set to greater than or equal to '12' (Automated) </h4> <div style=""margin-top: 0px;""></div> <b>Profile Applicability:</b> <br> &bull; Level 1 - Database Engine <br> &bull; Level 1 - AWS RDS <div style=""margin-top: 0px;""></div> <b>Description:</b> <br>SQL Server error log files must be protected from loss. The log files must be backed up before they are overwritten. Retaining more error logs helps prevent loss from frequent recycling before backups can occur. <div style=""margin-top: 0px;""></div> <b>Rationale:</b> <br>The SQL Server error log contains important information about major server events and login attempt information as well. <div style=""margin-top: 0px;""></div> <b>Impact:</b> <br>Once the max number of error logs is reached, the oldest error log file is deleted each time SQL Server restarts or sp_cycle_errorlog is executed. <div style=""margin-top: 0px;""></div> <b>Audit:</b> <br>Perform either the GUI or T-SQL method shown: <div> GUI Method </div> 1. Open SQL Server Management Studio.<br> 2. Open Object Explorer and connect to the target instance.<br> 3. Navigate to the Management tab in Object Explorer and expand. Right click on the SQL Server Logs file and select Configure.<br> 4. Verify the Limit the number of error log files before they are recycled checkbox is checked<br> 5. Verify the Maximum number of error log files is greater than or equal to 12<br> <div> T-SQL Method </div> Run the following T-SQL. The NumberOfLogFiles returned should be greater than or equal to 12. <p style =""font-family : Courier New""> DECLARE @NumErrorLogs int;<br> EXEC master.sys.xp_instance_regread<br> N'HKEY_LOCAL_MACHINE',<br> N'Software\Microsoft\MSSQLServer\MSSQLServer',<br> N'NumErrorLogs',<br> @NumErrorLogs OUTPUT;<br> SELECT ISNULL(@NumErrorLogs, -1) AS [NumberOfLogFiles]; </p> <div style=""margin-top: 0px;""></div> <b>Remediation: </b> <br>Adjust the number of logs to prevent data loss. The default value of 6 may be insufficient for a production environment. Perform either the GUI or T-SQL method shown: <div> GUI Method</div> 1. Open SQL Server Management Studio. 2. Open Object Explorer and connect to the target instance. 3. Navigate to the Management tab in Object Explorer and expand. Right click on the SQL Server Logs file and select Configure 4. Check the Limit the number of error log files before they are recycled 5. Set the Maximum number of error log files to greater than or equal to 12 <div>T-SQL Method</div> Run the following T-SQL to change the number of error log files, replace &lt;NumberAbove12> with your desired number of error log files: <p style =""font-family : Courier New ; ""> EXEC master.sys.xp_instance_regwrite<br> N'HKEY_LOCAL_MACHINE',<br> N'Software\Microsoft\MSSQLServer\MSSQLServer',<br> N'NumErrorLogs',<br> REG_DWORD,<br> &lt;NumberAbove12>; </p> <div style=""margin-top: 0px;""></div> <b>Default Value:</b> <br>6 SQL Server error log files in addition to the current error log file are retained by default. <div style=""margin-top: 0px;""></div> <b>References: </b> <br> <a href=""https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/scm-services-configure-sql-server-error-logs""> 1.https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/scm-services-configure-sql-server-error-logs</a> <br> </p>","DECLARE @NumErrorLogs int EXEC master.sys.xp_instance_regread N'HKEY_LOCAL_MACHINE', N'Software\Microsoft\MSSQLServer\MSSQLServer', N'NumErrorLogs',@NumErrorLogs OUTPUT; SELECT ISNULL(@NumErrorLogs, -1) AS [NumberOfLogFiles];",3,,12,,,1,1,,"EXEC master.sys.xp_instance_regwrite N'HKEY_LOCAL_MACHINE', N'Software\Microsoft\MSSQLServer\MSSQLServer',N'NumErrorLogs', REG_DWORD, 12;",,,Ensure 'Maximum number of error log files' is set to greater than or equal to '12',,,,,,,,
35,5.2,"<p style ="" font-size: 80%""> <h4>5.2 Ensure 'Default Trace Enabled' Server Configuration Option is set to '1' (Automated) </h4> <div style=""margin-top: 0px;""></div> <b>Profile Applicability:</b> <br> &bull; Level 1 - Database Engine <br> &bull; Level 1 - AWS RDS <div style=""margin-top: 0px;""></div> <b>Description:</b> <br>The default trace provides audit logging of database activity including account creations, privilege elevation and execution of DBCC commands. <div style=""margin-top: 0px;""></div> <b>Rationale:</b> <br>Default trace provides valuable audit information regarding security-related activities on the server. <div style=""margin-top: 0px;""></div> <b>Audit:</b> <br>Run the following T-SQL command: <p style =""font-family : Courier New""> SELECT name,<br> CAST(value as int) as value_configured,<br> CAST(value_in_use as int) as value_in_use<br> FROM sys.configurations<br> WHERE name = 'default trace enabled';<br> </p> Both value columns must show 1. <div style=""margin-top: 0px;""></div> <b>Remediation: </b> <br>Run the following T-SQL command: <p style =""font-family : Courier New ; ""> EXECUTE sp_configure 'show advanced options', 1;<br> RECONFIGURE;<br> EXECUTE sp_configure 'default trace enabled', 1;<br> RECONFIGURE;<br> GO<br> EXECUTE sp_configure 'show advanced options', 0;<br> RECONFIGURE; </p> <div style=""margin-top: 0px;""></div> <b>Default Value:</b> <br>1 (on) <div style=""margin-top: 0px;""></div> <b>References: </b> <br> <a href=""https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/default-trace-enabled-server-configuration-option""> 1.https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/default-trace-enabled-server-configuration-option</a><br> </p>","SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'default trace enabled';",1,2,1,1,,1,3,,"EXECUTE sp_configure 'show advanced options', 1; RECONFIGURE;","EXECUTE sp_configure 'default trace enabled', 1; RECONFIGURE;","EXECUTE sp_configure 'show advanced options', 0; RECONFIGURE;",Ensure 'Default Trace Enabled' Server Configuration Option is set to '1',,,,,,,,
36,5.3,"<h4>5.3 Ensure 'Login Auditing' is set to 'failed logins' (Automated)</h4> <div style=""margin-top: 0px;"">&nbsp;</div> <p style=""font-size: 80%;""><strong>Profile Applicability:</strong> <br />&bull; Level 1 - Database Engine <br />&bull; Level 1 - AWS RDS</p> <div style=""margin-top: 0px;"">&nbsp;</div> <p style=""font-size: 80%;""><strong>Description:</strong> <br />This setting will record failed authentication attempts for SQL Server logins to the SQL Server Errorlog. This is the default setting for SQL Server.<br />Historically, this setting has been available in all versions and editions of SQL Server.Prior to the availability of SQL Server Audit, this was the only provided mechanism for capturing logins (successful or failed).</p> <div style=""margin-top: 0px;"">&nbsp;</div> <p style=""font-size: 80%;""><strong>Rationale:</strong> <br />Capturing failed logins provides key information that can be used to detect\confirm password guessing attacks. Capturing successful login attempts can be used to confirm server access during forensic investigations, but using this audit level setting to also capture successful logins creates excessive noise in the SQL Server Errorlog which can hamper a DBA trying to troubleshoot problems. Elsewhere in this benchmark, we recommend using the newer lightweight SQL Server Audit feature to capture both successful and failed logins.</p> <div style=""margin-top: 0px;"">&nbsp;</div> <p style=""font-size: 80%;""><strong>Impact:</strong> <br />At a minimum, we want to ensure failed logins are captured in order to detect if an adversary is attempting to brute force passwords or otherwise attempting to access a SQL Server improperly. <br />Changing the setting requires a restart of the SQL Server service</p> <div style=""margin-top: 0px;"">&nbsp;</div> <p style=""font-size: 80%;""><strong>Audit:</strong> </p> <p style=""font-family: Courier New;"">EXEC xp_loginconfig 'audit level';</p> <p style=""font-size: 80%;"">A config_value of failure indicates a server login auditing setting of Failed logins only. If a config_value of all appears, then both failed and successful logins are being logged. Both settings should also be considered valid, but as mentioned capturing successful logins using this method creates lots of noise in the SQL Server Errorlog.</p> <div style=""margin-top: 0px;"">&nbsp;</div> <p style=""font-size: 80%;""><strong>Remediation: </strong> <br />Perform either the GUI or T-SQL method shown: <div> GUI Method </div> 1. Open SQL Server Management Studio.<br> 2. Right click the target instance and select Properties and navigate to the Security tab.<br> 3. Select the option Failed logins only under the Login Auditing section and click OK.<br> 4. Restart the SQL Server instance. <div> T-SQL Method </div> 1. Run: <p style=""font-family: Courier New;""> EXEC xp_instance_regwrite N'HKEY_LOCAL_MACHINE', <br> N'Software\Microsoft\MSSQLServer\MSSQLServer', N'AuditLevel',<br> REG_DWORD, 2 </p> 2. Restart the SQL Server instance. </p> <div style=""margin-top: 0px;"">&nbsp;</div> <p style=""font-size: 80%;""><strong>Default Value:</strong> <br />By default, only failed login attempts are captured.</p> <div style=""margin-top: 0px;"">&nbsp;</div> <p style=""font-size: 80%;""><strong>References: </strong> <br /><a href=""https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/server-properties-security-page""> 1.https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/server-properties-security-page</a><br /></p>",EXEC xp_loginconfig 'audit level';,1,1,failure,,,1,1,,"EXEC xp_instance_regwrite N'HKEY_LOCAL_MACHINE', N'Software\Microsoft\MSSQLServer\MSSQLServer', N'AuditLevel', REG_DWORD, 2",,,Ensure 'Login Auditing' is set to 'failed logins',,,,,,,,
37,5.4,"<p style ="" font-size: 80%""> <h4>5.4 Ensure 'SQL Server Audit' is set to capture both 'failed' and 'successful logins' (Automated) </h4> <div style=""margin-top: 0px;""></div> <b>Profile Applicability:</b> <br> &bull; Level 1 - Database Engine <br> &bull; Level 1 - AWS RDS <div style=""margin-top: 0px;""></div> <b>Description:</b> <br>SQL Server Audit is capable of capturing both failed and successful logins and writing them to one of three places: the application event log, the security event log, or the file system. We will use it to capture any login attempt to SQL Server, as well as any attempts to change audit policy. This will also serve to be a second source to record failed login attempts. <div style=""margin-top: 0px;""></div> <b>Rationale:</b> <br>By utilizing Audit instead of the traditional setting under the Security tab to capture successful logins, we reduce the noise in the ERRORLOG. This keeps it smaller and easier to read for DBAs who are attempting to troubleshoot issues with the SQL Server. Also, the Audit object can write to the security event log, though this requires operating system configuration. This gives an additional option for where to store login events, especially in conjunction with an SIEM. <div style=""margin-top: 0px;""></div> <b>Impact:</b> <br>With the previous recommendation, only failed logins are captured. If the Audit object is not implemented with the appropriate setting, SQL Server will not capture successful logins, which might prove of use for forensics. <div style=""margin-top: 0px;""></div> <b>Audit:</b> <br>For AWS RDS Instances, if RDS has not been configured to write to an S3 bucket, this is a fail. Run the following T-SQL command: <p style =""font-family : Courier New""> SELECT<br> S.name AS 'Audit Name'<br> , CASE S.is_state_enabled<br> WHEN 1 THEN 'Y'<br> WHEN 0 THEN 'N' END AS 'Audit Enabled'<br> , S.type_desc AS 'Write Location'<br> , SA.name AS 'Audit Specification Name'<br> , CASE SA.is_state_enabled<br> WHEN 1 THEN 'Y'<br> WHEN 0 THEN 'N' END AS 'Audit Specification Enabled'<br> , SAD.audit_action_name<br> , SAD.audited_result<br> FROM sys.server_audit_specification_details AS SAD<br> JOIN sys.server_audit_specifications AS SA<br> ON SAD.server_specification_id = SA.server_specification_id<br> JOIN sys.server_audits AS S<br> ON SA.audit_guid = S.audit_guid<br> WHERE SAD.audit_action_id IN ('CNAU', 'LGFL', 'LGSD') or (SAD.audit_action_id IN ('DAGS', 'DAGF') <br> and (select count(*) from sys.databases where<br> containment=1) > 0); </p> The result set should contain the following rows, one for each of the following audit_action_names: <ul> <li>AUDIT_CHANGE_GROUP</li> <li>FAILED_LOGIN_GROUP</li> <li>FAILED_LOGIN_GROUP</li> </ul> <br>The result set should also contain these 2 rows if there are contained databases <ul> <li>SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP</li> <li>FAILED_DATABASE_AUTHENTICATION_GROUP </li> </ul> <br>Both the Audit and Audit specification should be enabled and the audited_result should include both success and failure. <div style=""margin-top: 0px;""></div> <b>Remediation: </b> <br>For AWS RDS Instances, please refer to the documentation for configuring SQL Server Audit here:<br> <a href=""https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.SQLServer.Options.Audit.html"">SQL Server Audit</a> Perform either the GUI or T-SQL method shown: <div>GUI Method </div> 1. Expand the<b> SQL Server</b> in <b>Object Explorer.</b><br> 2. Expand the<b> Security Folder</b><br> 3. Right-click on the<b> Audits</b> folder and choose <b>New Audit...</b><br> 4. Specify a name for the <b>Server Audit.</b><br> 5. Specify the audit destination details and then click OK to save the Server Audit.<br> 6. Right-click on Server Audit Specifications and choose New Server Audit<br> 7. Name the Server Audit Specification<br> 8. Select the just created Server Audit in the Audit drop-down selection.<br> 9. Click the drop-down under Audit Action Type and select AUDIT_CHANGE_GROUP.<br> 10.Click the new drop-down Audit Action Type and select FAILED_LOGIN_GROUP.<br> 11.Click the new drop-down under Audit Action Type and select<br> SUCCESSFUL_LOGIN_GROUP.<br> 12.Click the new drop-down under Audit Action Type and select<br> SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP.<br> 13.Click the new drop-down under Audit Action Type and select FAILED_DATABASE_AUTHENTICATION_GROUP.<br> 14.Click OK to save the <b>Server Audit Specification.</b><br> 15.Right-click on the new Server Audit Specification and select <b>Enable Server Audit Specification.</b><br> 16.Right-click on the new <b>Server Audit</b> and select <b>Enable Server Audit</b>.<br> <div>T-SQL Method </div> Execute code similar to: <p > CREATE SERVER AUDIT TrackLogins<br> TO APPLICATION_LOG;<br> GO<br> CREATE SERVER AUDIT SPECIFICATION TrackAllLogins<br> FOR SERVER AUDIT TrackLogins<br> ADD (FAILED_LOGIN_GROUP),<br> ADD (SUCCESSFUL_LOGIN_GROUP),<br> ADD (AUDIT_CHANGE_GROUP),<br> ADD (SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP),<br> ADD (FAILED_DATABASE_AUTHENTICATION_GROUP)<br> WITH (STATE = ON);<br> GO<br> ALTER SERVER AUDIT TrackLogins<br> WITH (STATE = ON);<br> GO<br> </p> Note: If the write destination for the Audit object is to be the security event log, see the Books Online topic <a href=""https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/write-sql-server-audit-events-to-the-security-log"">Write SQL Server Audit Events to the Security Log</a> and follow the appropriate steps. <div style=""margin-top: 0px;""></div> <b>Default Value:</b> <br>By default, there are no audit object tracking login events. <div style=""margin-top: 0px;""></div> <b>References: </b> <br> <a href=""https://learn.microsoft.com/en-us/sql/relational-databases/security/auditing/create-a-server-audit-and-server-audit-specification""> 1.https://learn.microsoft.com/en-us/sql/relational-databases/security/auditing/create-a-server-audit-and-server-audit-specification</a> <br> </p>","SELECT S.name AS 'Audit Name' , CASE S.is_state_enabled WHEN 1 THEN 'Y' WHEN 0 THEN 'N' END AS 'Audit Enabled' , S.type_desc AS 'Write Location' , SA.name AS 'Audit Specification Name' , CASE SA.is_state_enabled WHEN 1 THEN 'Y' WHEN 0 THEN 'N' END AS 'Audit Specification Enabled' , SAD.audit_action_name , SAD.audited_result FROM sys.server_audit_specification_details AS SAD JOIN sys.server_audit_specifications AS SA ON SAD.server_specification_id = SA.server_specification_id JOIN sys.server_audits AS S ON SA.audit_guid = S.audit_guid WHERE SAD.audit_action_id IN ('CNAU', 'LGFL', 'LGSD') or (SAD.audit_action_id IN ('DAGS', 'DAGF') and (select count(*) from sys.databases where containment=1) > 0);",4,,AUDIT_CHANGE_GROUP,FAILED_LOGIN_GROUP,SUCCESSFUL_LOGIN_GROUP,,,,,,,Ensure 'SQL Server Audit' is set to capture both 'failed' and 'successful logins',,,,,,,,
38,6.1,"<p style ="" font-size: 80%""> <h4>6.1 Ensure Database and Application User Input is Sanitized (Manual) </h4> <div style=""margin-top: 0px;""></div> <b>Profile Applicability:</b> <br> &bull; Level 1 - Database Engine <div style=""margin-top: 0px;""></div> <b>Description:</b> <br>Always validate user input received from a database client or application by testing type, length, format, and range prior to transmitting it to the database server. <div style=""margin-top: 0px;""></div> <b>Rationale:</b> <br>Sanitizing user input drastically minimizes risk of SQL injection. <div style=""margin-top: 0px;""></div> <b>Impact:</b> <br>TSanitize user input may require changes to application code or database object syntax. These changes can require applications or databases to be taken temporarily off-line. Any change to TSQL or application code should be thoroughly tested in testing environment before production implementation. <div style=""margin-top: 0px;""></div> <b>Audit:</b> <br>Check with the application teams to ensure any database interaction is through the use of stored procedures and not dynamic SQL. Revoke any INSERT, UPDATE, or DELETE privileges to users so that modifications to data must be done through stored procedures. Verify that there's no SQL query in the application code produced by string concatenation. <div style=""margin-top: 0px;""></div> <b>Remediation: </b> <br>The following steps can be taken to remediate SQL injection vulnerabilities: <ul> <li>Review TSQL and application code for SQL Injection</li> <li>Only permit minimally privileged accounts to send user input to the server</li> <li>Minimize the risk of SQL injection attack by using parameterized commands and stored procedures </li> <li>Reject user input containing binary data, escape sequences, and comment characters</li> <li>Always validate user input and do not use it directly to build SQL statements</li> </ul> <div style=""margin-top: 0px;""></div> <b>References: </b> <br> <a href=""https://owasp.org/www-community/attacks/SQL_Injection"">1.https://owasp.org/www-community/attacks/SQL_Injection</a><br> </p>",0,0,,,,,0,0,,,,,Ensure Database and Application User Input is Sanitized,,,,,,,,
39,6.2,"<p style ="" font-size: 80%""> <h4>6.2 Ensure 'CLR Assembly Permission Set' is set to 'SAFE_ACCESS' for All CLR Assemblies (Automated) </h4> <div style=""margin-top: 0px;""></div> <b>Profile Applicability:</b> <br> &bull; Level 1 - Database Engine <br> &bull; Level 1 - AWS RDS <div style=""margin-top: 0px;""></div> <b>Description:</b> <br>Setting CLR Assembly Permission Sets to SAFE_ACCESS will hinder assemblies from accessing external system resources such as files, the network, environment variables,or the registry. <div style=""margin-top: 0px;""></div> <b>Rationale:</b> <br>Assemblies with EXTERNAL_ACCESS or UNSAFE permission sets can be used to access sensitive areas of the operating system, steal and/or transmit data and alter the state and other protection measures of the underlying Windows Operating System.<br> Assemblies which are Microsoft-created (is_user_defined = 0) are excluded from this check as they are required for overall system functionality. <div style=""margin-top: 0px;""></div> <b>Impact:</b> <br>The remediation measure should first be tested within a test environment prior to production to ensure the assembly still functions as designed with SAFE permission setting. <div style=""margin-top: 0px;""></div> <b>Audit:</b> <br>Execute the following SQL statement: <p style =""font-family : Courier New""> USE &lt;database_name>;<br> GO<br> SELECT name,<br> permission_set_desc<br> FROM sys.assemblies <br> WHERE is_user_defined = 1 AND name <> 'Microsoft.SqlServer.Types'; </p> All the returned assemblies should show SAFE_ACCESS in the permission_set_desc column <div style=""margin-top: 0px;""></div> <b>Remediation: </b> <p style =""font-family : Courier New""> USE &lt;database_name>; <br> GO <br> ALTER ASSEMBLY &lt;assembly_name> WITH PERMISSION_SET = SAFE; </p> <b>Default Value:: </b> <br>SAFE permission is set by default <div style=""margin-top: 0px;""></div> <b>References: </b> <br> <a href=""https://learn.microsoft.com/en-us/sql/relational-databases/clr-integration/security/clr-integration-code-access-security"">1.https://learn.microsoft.com/en-us/sql/relational-databases/clr-integration/security/clr-integration-code-access-security</a><br> <a href=""https://learn.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-assemblies-transact-sql"">2.https://learn.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-assemblies-transact-sql</a><br> <a href=""https://learn.microsoft.com/en-us/sql/t-sql/statements/alter-assembly-transact-sql""> 3.https://learn.microsoft.com/en-us/sql/t-sql/statements/alter-assembly-transact-sql</a><br> <a href=""https://learn.microsoft.com/en-us/sql/relational-databases/clr-integration/security/clr-integration-code-access-security#recommended-permission-settings"">4.https://learn.microsoft.com/en-us/sql/relational-databases/clr-integration/security/clr-integration-code-access-security#recommended-permission-settings</a> </p>","SELECT name, permission_set_desc FROM sys.assemblies WHERE is_user_defined = 1 AND name <> 'Microsoft.SqlServer.Types';",6,1,SAFE_ACCESS,,,2,1,<assembly_name>,ALTER ASSEMBLY  <assembly_name>  WITH PERMISSION_SET = SAFE;,,,Ensure 'CLR Assembly Permission Set' is set to 'SAFE_ACCESS' for All CLR Assemblies,,,,,,,,
40,7.1,"<p style ="" font-size: 80%""> <h4>7.1 Ensure 'Symmetric Key encryption algorithm' is set to 'AES_128' or higher in non-system databases (Automated) </h4> <div style=""margin-top: 0px;""></div> <b>Profile Applicability:</b> <br> &bull; Level 1 - Database Engine <br> &bull; Level 1 - AWS RDS <div style=""margin-top: 0px;""></div> <b>Description:</b> <br>Per the Microsoft Best Practices, only the SQL Server AES algorithm options, AES_128, AES_192, and AES_256, should be used for a symmetric key encryption algorithm. <div style=""margin-top: 0px;""></div> <b>Rationale:</b> <br>The following algorithms (as referred to by SQL Server) are considered weak or deprecated and should no longer be used in SQL Server: DES, DESX, RC2, RC4, RC4_128.<br> Many organizations may accept the Triple DES algorithms (TDEA) which use keying options 1 (3 key aka 3TDEA) or keying option 2 (2 key aka 2TDEA). In SQL Server, these are referred to as TRIPLE_DES_3KEY and TRIPLE_DES respectively. Additionally, the SQL Server algorithm named DESX is actually the same implementation as theTRIPLE_DES_3KEY option. However, using the DESX identifier as the algorithm type has been deprecated and its usage is now discouraged. <div style=""margin-top: 0px;""></div> <b>Impact:</b> <br>Eliminates use of weak and deprecated algorithms which may put a system at higher risk of an attacker breaking the key.<br> Encrypted data cannot be compressed, but compressed data can be encrypted. If you use compression, you should compress data before encrypting it. <div style=""margin-top: 0px;""></div> <b>Audit:</b> <br>Run the following code for each individual user database: <p style =""font-family : Courier New""> USE &lt;database_name><br> GO<br> SELECT db_name() AS Database_Name, name AS Key_Name<br> FROM sys.symmetric_keys<br> WHERE algorithm_desc NOT IN ('AES_128','AES_192','AES_256')<br> AND db_id() > 4;<br> GO </p> For compliance, no rows should be returned. <div style=""margin-top: 0px;""></div> <b>Remediation: </b> <br>Refer to Microsoft SQL Server Books Online ALTER SYMMETRIC KEY entry: <br><a href=""https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-symmetric-key-transact-sql"">https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-symmetric-key-transact-sql</a> <div style=""margin-top: 0px;""></div> <b>Default Value:: </b> <br>None <div style=""margin-top: 0px;""></div> <b>References: </b> <br> <a href=""https://learn.microsoft.com/en-us/sql/t-sql/statements/alter-asymmetric-key-transact-sql""> 1.https://learn.microsoft.com/en-us/sql/t-sql/statements/alter-asymmetric-key-transact-sql</a><br> <a href=""https://learn.microsoft.com/en-US/sql/relational-databases/security/encryption/choose-an-encryption-algorithm"">2.https://learn.microsoft.com/en-US/sql/relational-databases/security/encryption/choose-an-encryption-algorithm</a> </p>","SELECT db_name() AS Database_Name, name AS Key_Name FROM sys.symmetric_keys WHERE algorithm_desc NOT IN ('AES_128','AES_192','AES_256') AND db_id() > 4;",2,,,,,0,0,,,,,Ensure 'Symmetric Key encryption algorithm' is set to 'AES_128' or higher in non-system databases,,,,,,,,
41,7.2,"<p style ="" font-size: 80%""> <h4>7.2 Ensure Asymmetric Key Size is set to 'greater than or equal to 2048' in non-system databases (Automated) </h4> <div style=""margin-top: 0px;""></div> <b>Profile Applicability:</b> <br> &bull; Level 1 - Database Engine <br> &bull; Level 1 - AWS RDS <div style=""margin-top: 0px;""></div> <b>Description:</b> <br>Microsoft Best Practices recommend to use at least a 2048-bit encryption algorithm for asymmetric keys. <br> <div style=""margin-top: 0px;""></div> <b>Rationale:</b> <br>The RSA_2048 encryption algorithm for asymmetric keys in SQL Server is the highest bitlevel provided and therefore the most secure available choice (other choices are RSA_512 and RSA_1024). <div style=""margin-top: 0px;""></div> <b>Impact:</b> <br>The higher-bit level may result in slower performance, but reduces the likelihood of an attacker breaking the key.<br> Encrypted data cannot be compressed, but compressed data can be encrypted. If you use compression, you should compress data before encrypting it. <div style=""margin-top: 0px;""></div> <b>Audit:</b> <br>Run the following code for each individual user database: <p style =""font-family : Courier New""> USE &lt;database_name> <br> GO<br> SELECT db_name() AS Database_Name, name AS Key_Name<br> FROM sys.asymmetric_keys<br> WHERE key_length &lt; 2048<br> AND db_id() > 4;<br> GO </p> For compliance, no rows should be returned. <div style=""margin-top: 0px;""></div> <b>Remediation: </b> <br>Refer to Microsoft SQL Server Books Online ALTER ASYMMETRIC KEY entry: <br><a href=""https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-asymmetric-key-transact-sql"">https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-asymmetric-key-transact-sql</a> <div style=""margin-top: 0px;""></div> <b>Default Value: </b> <br>None <div style=""margin-top: 0px;""></div> <b>References: </b> <br> <a href=""https://learn.microsoft.com/en-us/sql/t-sql/statements/alter-asymmetric-key-transact-sql""> 1.https://learn.microsoft.com/en-us/sql/t-sql/statements/alter-asymmetric-key-transact-sql</a><br> <a href=""https://learn.microsoft.com/en-US/sql/relational-databases/security/encryption/choose-an-encryption-algorithm"">2.https://learn.microsoft.com/en-US/sql/relational-databases/security/encryption/choose-an-encryption-algorithm</a> </p>","SELECT db_name() AS Database_Name, name AS Key_Name FROM sys.asymmetric_keys WHERE key_length < 2048 AND db_id() > 4",2,,,,,0,0,,,,,Ensure Asymmetric Key Size is set to 'greater than or equal to 2048' in non-system databases,,,,,,,,
42,7.3,"<p style ="" font-size: 80%""> <h4>7.3 Ensure Database Backups are Encrypted (Automated) </h4> <div style=""margin-top: 0px;""></div> <b>Profile Applicability:</b> <br> &bull; Level 2 - Database Engine <div style=""margin-top: 0px;""></div> <b>Description:</b> <br>Ensure Database Backups are Encrypted<br> <div style=""margin-top: 0px;""></div> <b>Rationale:</b> <br>Databases may contain sensitive data. Backups of this data allow the data to easily leave the Enterprise and secure environments. Encrypting the backup makes accessing the data much more difficult. <div style=""margin-top: 0px;""></div> <b>Impact:</b> <br>A database backup accidentally exposed to the Internet or transmitted outside a secure environment can be easily restored to a SQL Server anywhere and its contents discovered. <div style=""margin-top: 0px;""></div> <b>Audit:</b> <p style =""font-family : Courier New""> SELECT<br> b.key_algorithm, b.encryptor_type, d.is_encrypted,<br> b.database_name,<br> b.server_name<br> FROM msdb.dbo.backupset b<br> inner join sys.databases d on b.database_name = d.name<br> where b.key_algorithm IS NULL AND b.encryptor_type IS NULL AND d.is_encrypted = 0; </p> No rows should be returned by the query <div style=""margin-top: 0px;""></div> <b>Remediation: </b> <br>SQL Server backups need to 'Back up to a new media set', not 'Back up to the existing media set' in order to allow for encryption. The backup option to Encrypt Backup can be implemented after a Certificate or Asymmetric key has been applied to the SQL Server for this purpose.<br> Alternatively, encrypt the database with TDE. This automatically encrypts the backups as well. See 7.5 </p>","SELECT b.key_algorithm, b.encryptor_type, d.is_encrypted, b.database_name, b.server_name FROM msdb.dbo.backupset b inner join sys.databases d on b.database_name = d.name where b.key_algorithm IS NULL AND b.encryptor_type IS NULL AND d.is_encrypted = 0;",2,,,,,0,0,,,,,Ensure Database Backups are Encrypted,,,,,,,,
43,7.4,"<p style ="" font-size: 80%""> <h4>7.4 Ensure Network Encryption is Configured and Enabled (Automated) </h4> <div style=""margin-top: 0px;""></div> <b>Profile Applicability:</b> <br> &bull; Level 2 - Database Engine <div style=""margin-top: 0px;""></div> <b>Description:</b> <br>Configuring and enabling network encryption ensures traffic between the application and the database system is encrypted. This will ensure compliance to security standards such as PCI DSS, which is required if connections are through a public network.<br> Network encryption can be configured in SQL Server either with self-signed certificates or TLS certificates. <div style=""margin-top: 0px;""></div> <b>Rationale:</b> <br>Network encryption will ensure data transmitted over the network is protected, so attackers can’t ex-filtrate passwords, and confidential data. This protects against man in the middle attack, and network sniffing attacks to ex-filtrate data transmitted between the database system and applications. <div style=""margin-top: 0px;""></div> <b>Audit:</b> <br>Run the following T-SQL code against the Master database: <p style =""font-family : Courier New""> use [master] <br> select distinct(encrypt_option) from sys.dm_exec_connections;<br> GO </p> A response of TRUE implies a pass. <div style=""margin-top: 0px;""></div> <b>Remediation: </b> <br>Refer to Microsoft SQL Server Encryption Documentation: <br><a href=""https://learn.microsoft.com/en-us/sql/relational-databases/security/encryption/sql-server-encryption"">https://learn.microsoft.com/en-us/sql/relational-databases/security/encryption/sql-server-encryption</a> <div style=""margin-top: 0px;""></div> <b>References: </b> <br> <a href=""https://learn.microsoft.com/en-us/sql/relational-databases/security/encryption/sql-server-encryption""> 1.https://learn.microsoft.com/en-us/sql/relational-databases/security/encryption/sql-server-encryption</a><br> <a href=""https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/configure-sql-server-encryption""> 2.https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/configure-sql-server-encryption</a> <a href=""https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/certificate-requirements""> 3.https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/certificate-requirements</a> <br> </p>","select ' Network Encryption '  , count (case when (encrypt_option= 'False') then 1 else 0 end ) from sys.dm_exec_connections;",1,1,0,,,0,0,,,,,Ensure Network Encryption is Configured and Enabled,,,,,,,,
44,7.5,"<p style ="" font-size: 80%""> <h4>7.5 Ensure Databases are Encrypted with TDE (Automated </h4> <div style=""margin-top: 0px;""></div> <b>Profile Applicability:</b> <br> &bull; Level 2 - Database Engine <div style=""margin-top: 0px;""></div> <b>Description:</b> <br>Ensure user databases are encrypted using Transparent Data Encryption (TDE).<br> Backups of databases encrypted with TDE are automatically encrypted as well. <div style=""margin-top: 0px;""></div> <b>Rationale:</b> <br>A malicious party who steals physical media like drives or backup tapes can restore or attach the database and browse its data.<br> One solution is to encrypt sensitive data in a database and use a certificate to protect the keys that encrypt the data. This solution prevents anyone without the keys from using the data. <div style=""margin-top: 0px;""></div> <b>Impact:</b> <br>A database datafile, logfile or backup accidentally exposed to the Internet or transmitted outside a secure environment can be easily copied/restored to a SQL Server anywhere and its contents discovered. <div style=""margin-top: 0px;""></div> <b>Audit:</b> <p style =""font-family : Courier New""> select database_id, name, is_encrypted from sys.databases<br> where database_id > 4 and is_encrypted != 1 </p> The query should return no rows <div style=""margin-top: 0px;""></div> <b>Remediation: </b> <br>Implement TDE encryption on each user database with sensitive data.<br> More info on how to do this is available here: <br><a href=""https://learn.microsoft.com/en-us/sql/relational-databases/security/encryption/transparent-data-encryption?view=sql-server-ver15"">https://learn.microsoft.com/en-us/sql/relational-databases/security/encryption/transparent-data-encryption?view=sql-server-ver15</a> <div style=""margin-top: 0px;""></div> <b>References: </b> <br> <a href=""https://learn.microsoft.com/en-us/sql/relational-databases/security/encryption/transparent-data-encryption?view=sql-server-ver15""> 1.https://learn.microsoft.com/en-us/sql/relational-databases/security/encryption/transparent-data-encryption?view=sql-server-ver15</a><br> <a href=""https://learn.microsoft.com/en-us/archive/blogs/sqlsecurity/feature-spotlight-transparent-data-encryption-tde""> 2.https://learn.microsoft.com/en-us/archive/blogs/sqlsecurity/feature-spotlight-transparent-data-encryption-tde</a> <br> </p>","select database_id, name, is_encrypted from sys.databases where database_id > 4 and is_encrypted != 1",2,,,,,0,0,,,,,Ensure Databases are Encrypted with TDE,,,,,,,,
45,8.1,"<h4>8.1 Ensure 'SQL Server Browser Service' is configured correctly (Manual)</h4> <div style=""margin-top: 0px;"">&nbsp;</div> <p style=""font-size: 80%;""><strong>Profile Applicability:</strong> <br />&bull; Level 1 - Database Engine</p> <div style=""margin-top: 0px;"">&nbsp;</div> <p style=""font-size: 80%;""><strong>Description:</strong> <br />No recommendation is being given on disabling the SQL Server Browser service.</p> <div style=""margin-top: 0px;"">&nbsp;</div> <p style=""font-size: 80%;""><strong>Rationale:</strong> <br />In the case of a default instance installation, the SQL Server Browser service is disabled by default. Unless there is a named instance on the same server, there is typically no reason for the SQL Server Browser service to be running. In this case it is strongly suggested that the SQL Server Browser service remain disabled.<br />When it comes to named instances, given that a security scan can fingerprint a SQL Server listening on any port, it's therefore of limited benefit to disable the SQL Server Browser service.<br />However, if all connections against the named instance are via applications and are not visible to end users, then configuring the named instance to listening on a static port, disabling the SQL Server Browser service, and configuring the apps to connect to the specified port should be the direction taken. This follows the general practice of reducing the surface area, especially for an unneeded feature.<br />On the other hand, if end users are directly connecting to databases on the instance, then typically having them use ServerName\InstanceName is best. This requires the SQL Server Browser service to be running. Disabling the SQL Server Browser service would mean the end users would have to remember port numbers for the instances. When they don't that will generate service calls to IT staff. Given the limited benefit of disabling the service, the trade-off is probably not worth it, meaning it makes more business sense to leave the SQL Server Browser service enabled.</p> <div style=""margin-top: 0px;"">&nbsp;</div> <p style=""font-size: 80%;""><strong>Audit:</strong> <br />Check the SQL Browser service's status via services.msc or similar methods.</p> <div style=""margin-top: 0px;"">&nbsp;</div> <p style=""font-size: 80%;""><strong>Remediation: </strong> <br />Enable or disable the service as needed for your environment.</p> <div style=""margin-top: 0px;"">&nbsp;</div> <p style=""font-size: 80%;""><strong>Default Value:</strong> <br />The SQL Server Browser service is disabled if only a default instance is installed on the server. If a named instance is installed, the default value is for the SQL Server Browser service to be configured as Automatic for startup.</p> <div style=""margin-top: 0px;"">&nbsp;</div> <p style=""font-size: 80%;""><strong>References: </strong> <br /><a href=""https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/sql-server-browser-service-database-engine-and-ssas""> https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/sql-server-browser-service-database-engine-and-ssas</a></p>",0,0,,,,,0,0,,,,,Ensure 'SQL Server Browser Service' is configured correctly,,,,,,,,
