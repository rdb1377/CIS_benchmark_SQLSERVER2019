index,Dsc,query,recom,RetNumbers,val1,val2
1.1,Ensure Latest SQL Server Cumulative and Security Updates are installed,0,0,0,0,0
1.2,Ensure Single-Function Member Servers are Used,0,0,0,0,0
2.1,"<p><h3>2.1 Ensure 'Ad Hoc Distributed Queries' Server Configuration Option is set to '0' (Automated) </h3><br><b>Profile Applicability:</b><br> &bull; Level 1 - Database Engine <br>&bull; Level 1 - AWS RDS <br><br> <b>Description:</b> <br>Enabling Ad Hoc Distributed Queries allows users to query data and execute statements on external data sources. This functionality should be disabled. <br><br><b>Rationale:</b> <br>This feature can be used to remotely access and exploit vulnerabilities on remote SQL Server instances and to run unsafe Visual Basic for Application functions.<br>Audit: <br> Run the following T-SQL command: <br><p style =""font-family : Courier New""> SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use <br>FROM sys.configurations <br>WHERE name = 'Ad Hoc Distributed Queries';</p> <br>Both value columns must show 0. <br>Remediation: <br>For AWS RDS Instances, please refer to the documentation for using Parameter Groups here: <br> Working with parameter groups Run the following T-SQL command: <br> EXECUTE sp_configure 'show advnced options', 1; <br>RECONFIGURE; <br>EXECUTE sp_configure 'Ad Hoc Distributed Queries', 0; <br>RECONFIGURE; <br>GO <br> EXECUTE sp_configure 'show advanced options', 0; RECONFIGURE; <br>Default Value: <br>0 (disabled) <br> References: <br><a href=""https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWit hParamGroups.html"">link text</a><br><a href=""https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/adhoc-distributed-queries-server-configuration-option"">link text</a> <br></p>","SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'Ad Hoc Distributed Queries';","EXECUTE sp_configure 'show advanced options', 1; RECONFIGURE; EXECUTE sp_configure 'Ad Hoc Distributed Queries', 0; RECONFIGURE;  EXECUTE sp_configure 'show advanced options', 0; RECONFIGURE;",2,0,0
2.2,"<p>2.2 Ensure 'CLR Enabled' Server Configuration Option is set to '0' (Automated)<br> <br> Profile Applicability:<br> &bull;  Level 1 - Database Engine<br> &bull;  Level 1 - AWS RDS<br> <br> Description:<br> The clr enabled option specifies whether user assemblies can be run by SQL Server.<br> Rationale:<br> Enabling use of CLR assemblies widens the attack surface of SQL Server and puts it at<br> risk from both inadvertent and malicious assemblies.<br> <br> Impact:<br> If CLR assemblies are in use, applications may need to be rearchitected to eliminate<br> their usage before disabling this setting. Alternatively, some organizations may allow<br> this setting to be enabled 1 for assemblies created with the SAFE permission set, but<br> disallow assemblies created with the riskier UNSAFE and EXTERNAL_ACCESS permission<br> sets. To find user-created assemblies, run the following query in all databases,<br> replacing <database_name> with each database name:<br> <br> USE [<database_name>]<br> GO<br> SELECT name AS Assembly_Name, permission_set_desc<br> FROM sys.assemblies<br> WHERE is_user_defined = 1;<br> GO<br> Audit:<br> Run the following T-SQL command:<br> SELECT name,<br> CAST(value as int) as value_configured,<br> CAST(value_in_use as int) as value_in_use<br> FROM sys.configurations<br> WHERE name = 'clr strict security';<br> If both values are 1, this recommendation is Not Applicable. Otherwise, run the following<br> <br> T-SQL command:<br> SELECT name,<br> CAST(value as int) as value_configured,<br> CAST(value_in_use as int) as value_in_use<br> FROM sys.configurations<br> WHERE name = 'clr enabled';<br> Both value columns must show 0 to be compliant.<br> <br> Remediation:<br> For AWS RDS Instances, please refer to the documentation for using Parameter<br> Groups here:<br> Working with parameter groups<br> Run the following T-SQL command:<br> EXECUTE sp_configure 'clr enabled', 0;<br> RECONFIGURE;<br> <br> Default Value:<br> By default, this option is disabled (0).<br> <br> References:<br> 1. https://learn.microsoft.com/en-us/sql/t-sql/statements/create-assembly-transact-<br> sql<br> 2. https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWit<br> hParamGroups.htm<br></p>","SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'clr strict security';","EXECUTE sp_configure 'show advanced options', 1; RECONFIGURE; EXECUTE sp_configure 'Ad Hoc Distributed Queries', 0; RECONFIGURE;  EXECUTE sp_configure 'show advanced options', 0; RECONFIGURE;",2,0,0
2.3,"<p>2.3 Ensure 'Cross DB Ownership Chaining' Server Configuration Option is set to '0' (Automated)<br> <br> Profile Applicability:<br> &bull;  Level 1 - Database Engine<br> &bull;  Level 1 - AWS RDS<br> <br> Description:<br> The cross db ownership chaining option controls cross-database ownership chaining<br> across all databases at the instance (or server) level.<br> <br> Rationale:<br> When enabled, this option allows a member of the db_owner role in a database to gain<br> access to objects owned by a login in any other database, causing an unnecessary<br> information disclosure. When required, cross-database ownership chaining should only<br> be enabled for the specific databases requiring it instead of at the instance level for all<br> databases by using the ALTER DATABASE<database_name>SET DB_CHAINING ON<br> command. This database option may not be changed on the master, model, or tempdb<br> system databases.<br> <br> Audit:<br> Run the following T-SQL command:<br> SELECT name,<br> CAST(value as int) as value_configured,<br> CAST(value_in_use as int) as value_in_use<br> FROM sys.configurations<br> WHERE name = 'cross db ownership chaining';<br> Both value columns must show 0 to be compliant.<br> Remediation:<br> For AWS RDS Instances, please refer to the documentation for using Parameter<br> Groups here:<br> Working with parameter groups<br> Run the following T-SQL command:<br> EXECUTE sp_configure 'cross db ownership chaining', 0;<br> RECONFIGURE;<br> GO<br> <br> Default Value:<br> By default, this option is disabled (0).<br> <br> References:<br> 1. https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/cross-<br> db-ownership-chaining-server-configuration-option<br> 2. https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWit<br> hParamGroups.html<br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br></p>","SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'cross db ownership chaining';","EXECUTE sp_configure 'cross db ownership chaining', 0; RECONFIGURE; GO",2,0,0
2.4,"<p>2.4 Ensure 'Database Mail XPs' Server Configuration Option is set to '0' (Automated)<br> <br> Profile Applicability:<br> &bull;  Level 1 - Database Engine<br> &bull;  Level 1 - AWS RDS<br> <br> Description:<br> The Database Mail XPs option controls the ability to generate and transmit email<br> messages from SQL Server.<br> <br> Rationale:<br> Disabling the Database Mail XPs option reduces the SQL Server surface, eliminates a<br> DOS attack vector and channel to exfiltrate data from the database server to a remote<br> host.<br> <br> Audit:<br> Run the following T-SQL command:<br> SELECT name,<br> CAST(value as int) as value_configured,<br> CAST(value_in_use as int) as value_in_use<br> FROM sys.configurations<br> WHERE name = 'Database Mail XPs';<br> Both value columns must show 0 to be compliant.<br> Remediation:<br> Run the following T-SQL command:<br> EXECUTE sp_configure 'show advanced options', 1;<br> RECONFIGURE;<br> EXECUTE sp_configure 'Database Mail XPs', 0;<br> RECONFIGURE;<br> GO<br> EXECUTE sp_configure 'show advanced options', 0;<br> RECONFIGURE;<br> <br> Default Value:<br> By default, this option is disabled (0).<br> <br> References:<br> 1. https://learn.microsoft.com/en-us/sql/relational-databases/database-<br> mail/database-mail<br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br></p>","SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'Database Mail XPs';","EXECUTE sp_configure 'show advanced options', 1; RECONFIGURE; EXECUTE sp_configure 'Database Mail XPs', 0; RECONFIGURE; GO EXECUTE sp_configure 'show advanced options', 0; RECONFIGURE;",2,0,0
2.5,"<p>2.5 Ensure 'Ole Automation Procedures' Server Configuration Option is set to '0' (Automated)<br> <br> Profile Applicability:<br> &bull;  Level 1 - Database Engine<br> <br> Description:<br> The Ole Automation Procedures option controls whether OLE Automation objects can<br> be instantiated within Transact-SQL batches. These are extended stored procedures<br> that allow SQL Server users to execute functions external to SQL Server.<br> <br> Rationale:<br> Enabling this option will increase the attack surface of SQL Server and allow users to<br> execute functions in the security context of SQL Server.<br> <br> Audit:<br> Run the following T-SQL command:<br> SELECT name,<br> CAST(value as int) as value_configured,<br> CAST(value_in_use as int) as value_in_use<br> FROM sys.configurations<br> WHERE name = 'Ole Automation Procedures';<br> Both value columns must show 0 to be compliant.<br> <br> Remediation:<br> Run the following T-SQL command:<br> EXECUTE sp_configure 'show advanced options', 1;<br> RECONFIGURE;<br> EXECUTE sp_configure 'Ole Automation Procedures', 0;<br> RECONFIGURE;<br> GO<br> EXECUTE sp_configure 'show advanced options', 0;<br> RECONFIGURE;<br> Default Value:<br> By default, this option is disabled (0).<br> <br> References:<br> 1. https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/ole-<br> automation-procedures-server-configuration-option<br></p>","SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'Ole Automation Procedures';","EXECUTE sp_configure 'show advanced options', 1; RECONFIGURE; EXECUTE sp_configure 'Ole Automation Procedures', 0; RECONFIGURE; GO EXECUTE sp_configure 'show advanced options', 0; RECONFIGURE;",2,0,0
2.6,"<p>2.6 Ensure 'Remote Access' Server Configuration Option is set to '0' (Automated)<br> <br> Profile Applicability:<br> &bull;  Level 1 - Database Engine<br> &bull;  Level 1 - AWS RDS<br> <br> Description:<br> The remote access option controls the execution of local stored procedures on remote<br> servers or remote stored procedures on local server.<br> <br> Rationale:<br> Functionality can be abused to launch a Denial-of-Service (DoS) attack on remote<br> servers by off-loading query processing to a target.<br> <br> Impact:<br> Per Microsoft: This feature will be removed in the next version of Microsoft SQL Server.<br> Do not use this feature in new development work, and modify applications that currently<br> use this feature as soon as possible. Use sp_addlinkedserver instead.<br> <br> Audit:<br> Run the following T-SQL command:<br> SELECT name,<br> CAST(value as int) as value_configured,<br> CAST(value_in_use as int) as value_in_use<br> FROM sys.configurations<br> WHERE name = 'remote access';<br> Both value columns must show 0.<br> <br> Remediation:<br> For AWS RDS Instances, please refer to the documentation for using Parameter<br> Groups here:<br> Working with parameter groups<br> Otherwise, run the following T-SQL command:<br> EXECUTE sp_configure 'show advanced options', 1;<br> RECONFIGURE;<br> EXECUTE sp_configure 'remote access', 0;<br> RECONFIGURE;<br> GO<br> EXECUTE sp_configure 'show advanced options', 0;<br> RECONFIGURE;<br> Restart the Database Engine.<br> <br> Default Value:<br> By default, this option is enabled (1).<br> <br> References:<br> 1. https://learn.microsoft.com/en-us/sql/database-engine/configure-<br> windows/configure-the-remote-access-server-configuration-option<br> 2. https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWit<br> hParamGroups.html<br> <br></p>","SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'remote access';","EXECUTE sp_configure 'show advanced options', 1; RECONFIGURE; EXECUTE sp_configure 'remote access', 0; RECONFIGURE; GO EXECUTE sp_configure 'show advanced options', 0; RECONFIGURE;",2,0,0
2.7,"<p>2.7 Ensure 'Remote Admin Connections' Server Configuration Option is set to '0' (Automated)<br> <br> Profile Applicability:<br> &bull;  Level 1 - Database Engine<br> <br> Description:<br> The remote admin connections option controls whether a client application on a remote<br> computer can use the Dedicated Administrator Connection (DAC).<br> <br> Rationale:<br> The Dedicated Administrator Connection (DAC) lets an administrator access a running<br> server to execute diagnostic functions or Transact-SQL statements, or to troubleshoot<br> problems on the server, even when the server is locked or running in an abnormal state<br> and not responding to a SQL Server Database Engine connection. In a cluster scenario,<br> the administrator may not actually be logged on to the same node that is currently<br> hosting the SQL Server instance and thus is considered ""remote"". Therefore, this<br> setting should usually be enabled (1) for SQL Server failover clusters; otherwise, it<br> should be disabled (0) which is the default.<br> <br> Audit:<br> Run the following T-SQL command:<br> SELECT name,<br> CAST(value as int) as value_configured,<br> CAST(value_in_use as int) as value_in_use<br> FROM sys.configurations<br> WHERE name = 'remote admin connections'<br> AND SERVERPROPERTY('IsClustered') = 0;<br> If no data is returned, the instance is a cluster and this recommendation is not<br> applicable. If data is returned, then both the value columns must show 0 to be<br> compliant.<br> <br> Remediation:<br> Run the following T-SQL command on non-clustered installations:<br> EXECUTE sp_configure 'remote admin connections', 0;<br> RECONFIGURE;<br> GO<br> <br> Default Value:<br> By default, this option is disabled (0), only local connections may use the DAC.<br> <br> References:<br> 1. https://learn.microsoft.com/en-us/sql/database-engine/configure-<br> windows/remote-admin-connections-server-configuration-option<br> By default, this option is enabled (1).<br> <br> References:<br> 1. https://learn.microsoft.com/en-us/sql/database-engine/configure-<br> windows/configure-the-remote-access-server-configuration-option<br> 2. https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWit<br> hParamGroups.html<br> <br> <br> <br> <br> <br> <br> <br> <br> <br></p>","SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'remote admin connections' AND SERVERPROPERTY('IsClustered') = 0;","EXECUTE sp_configure 'remote admin connections', 0; RECONFIGURE; GO",2,0,0
2.8,2.8 Ensure 'Scan For Startup Procs' Server Configuration Option is set to '0' (Automated),"SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'scan for startup procs';","EXECUTE sp_configure 'show advanced options', 1; RECONFIGURE; EXECUTE sp_configure 'scan for startup procs', 0; RECONFIGURE; GO EXECUTE sp_configure 'show advanced options', 0; RECONFIGURE;",2,0,0
2.9,2.9 Ensure 'Trustworthy' Database Property is set to 'Off' (Automated),SELECT name FROM sys.databases WHERE is_trustworthy_on = 1 AND name != 'msdb';,ALTER DATABASE [] SET TRUSTWORTHY OFF;,0,,
2.10,2.10 Ensure Unnecessary SQL Server Protocols are set to 'Disabled' (Manual),0,0,,0,0
2.11,2.11 Ensure SQL Server is configured to use non-standard ports (Automated),"SELECT 'hi', count(*) as no  FROM sys.dm_server_registry WHERE value_name like '%Tcp%' and value_data='1433';",0,1,0,
